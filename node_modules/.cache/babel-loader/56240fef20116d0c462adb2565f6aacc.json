{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/views/work/start.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/views/work/start.vue","mtime":1675244276674},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/shiliangliang/6cloud/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mapGetters } from \"vuex\";\nimport { startList } from \"@/api/work/work\";\nimport { flowCategory, flowRoute } from \"@/util/flow\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      mode: '1',\n      selectionId: '',\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      flowBox: false,\n      flowUrl: '',\n      workBox: false,\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        editBtn: false,\n        addBtn: false,\n        viewBtn: false,\n        delBtn: false,\n        menuWidth: 150,\n        dialogWidth: 900,\n        dialogClickModal: false,\n        column: [{\n          label: '租户编号',\n          prop: 'tenantId',\n          slot: true,\n          width: 120\n        }, {\n          label: \"流程分类\",\n          type: \"select\",\n          row: true,\n          dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          dataType: \"number\",\n          slot: true,\n          prop: \"category\",\n          search: true,\n          width: 100\n        }, {\n          label: '流程标识',\n          prop: 'key'\n        }, {\n          label: '流程名称',\n          prop: 'name',\n          search: true\n        }, {\n          label: '流程版本',\n          prop: 'version',\n          slot: true,\n          width: 80\n        }, {\n          label: '状态',\n          prop: 'suspensionState',\n          slot: true,\n          width: 80\n        }, {\n          label: '部署时间',\n          prop: 'deploymentTime',\n          width: 165\n        }]\n      },\n      data: []\n    };\n  },\n  watch: {\n    'mode': function mode() {\n      this.onLoad(this.page);\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\", \"flowRoutes\"])), {}, {\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleStart: function handleStart(row) {\n      this.$router.push({\n        path: \"/work/process/\".concat(flowRoute(this.flowRoutes, row.category), \"/form/\").concat(row.id)\n      });\n    },\n    handleImage: function handleImage(row) {\n      this.flowUrl = \"/api/blade-flow/process/resource-view?processDefinitionId=\".concat(row.id);\n      this.flowBox = true;\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var query = _objectSpread(_objectSpread({}, this.query), {}, {\n        category: params.category ? flowCategory(params.category) : null,\n        mode: this.mode\n      });\n      this.loading = true;\n      startList(page.currentPage, page.pageSize, Object.assign(params, query)).then(function (res) {\n        var data = res.data.data;\n        _this.page.total = data.total;\n        _this.data = data.records;\n        _this.loading = false;\n        _this.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;AA+EA;AACA;AACA;AAEA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC,SACA;UACAC;UACAC;UACAC;UACAC;QACA,GACA;UACAH;UACAI;UACAC;UACAC;UACAC;YACAP;YACAQ;UACA;UACAC;UACAP;UACAD;UACAS;UACAP;QACA,GACA;UACAH;UACAC;QACA,GACA;UACAD;UACAC;UACAS;QACA,GACA;UACAV;UACAC;UACAC;UACAC;QACA,GACA;UACAH;UACAC;UACAC;UACAC;QACA,GACA;UACAH;UACAC;UACAE;QACA;MAEA;MACAlC;IACA;EACA;EACA0C;IACA;MACA;IACA;EACA;EACAC,0CACAC;IACAC;MACA;MACA;QACAA;MACA;MACA;IACA;EAAA,EACA;EACAC;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACAC;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;QAAAC;MAAA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MAAA;MACA,4CACA;QACAC;QACAzD;MAAA,EACA;MACA;MACA0D;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["data","form","mode","selectionId","selectionList","query","loading","page","pageSize","currentPage","total","flowBox","flowUrl","workBox","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","selection","editBtn","addBtn","viewBtn","delBtn","menuWidth","dialogWidth","dialogClickModal","column","label","prop","slot","width","type","row","dicUrl","props","value","dataType","search","watch","computed","mapGetters","ids","methods","searchReset","searchChange","done","selectionChange","selectionClear","handleStart","path","handleImage","currentChange","sizeChange","refreshChange","onLoad","category","startList"],"sourceRoot":"src/views/work","sources":["start.vue"],"sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page.sync=\"page\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-radio-group v-model=\"mode\" size=\"small\">\r\n          <el-radio-button label=\"1\">通用流程</el-radio-button>\r\n          <el-radio-button label=\"2\">定制流程</el-radio-button>\r\n        </el-radio-group>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.work_start_flow\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleStart(scope.row)\">发起\r\n        </el-button>\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.work_start_image\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleImage(scope.row,scope.index)\">流程图\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"tenantId\">\r\n        <el-tag>{{row.tenantId===''?'通用':row.tenantId}}</el-tag>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"version\">\r\n        <el-tag>v{{row.version}}</el-tag>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"suspensionState\">\r\n        <el-tag>{{row.suspensionState===1?'激活':'挂起'}}</el-tag>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"category\">\r\n        <el-tag>{{row.categoryName}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <el-dialog title=\"流程图\"\r\n               append-to-body\r\n               :visible.sync=\"flowBox\"\r\n               :fullscreen=\"true\">\r\n      <iframe\r\n        :src=flowUrl\r\n        width=\"100%\"\r\n        height=\"700\"\r\n        title=\"流程图\"\r\n        frameBorder=\"no\"\r\n        border=\"0\"\r\n        marginWidth=\"0\"\r\n        marginHeight=\"0\"\r\n        scrolling=\"no\"\r\n        allowTransparency=\"yes\">\r\n      </iframe>\r\n      <span slot=\"footer\"\r\n            class=\"dialog-footer\">\r\n        <el-button @click=\"flowBox = false\">关 闭</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {mapGetters} from \"vuex\";\r\n  import {startList} from \"@/api/work/work\";\r\n  import {flowCategory, flowRoute} from \"@/util/flow\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        mode: '1',\r\n        selectionId: '',\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        flowBox: false,\r\n        flowUrl: '',\r\n        workBox: false,\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 30,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          editBtn: false,\r\n          addBtn: false,\r\n          viewBtn: false,\r\n          delBtn: false,\r\n          menuWidth: 150,\r\n          dialogWidth: 900,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: '租户编号',\r\n              prop: 'tenantId',\r\n              slot: true,\r\n              width: 120,\r\n            },\r\n            {\r\n              label: \"流程分类\",\r\n              type: \"select\",\r\n              row: true,\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              slot: true,\r\n              prop: \"category\",\r\n              search: true,\r\n              width: 100,\r\n            },\r\n            {\r\n              label: '流程标识',\r\n              prop: 'key',\r\n            },\r\n            {\r\n              label: '流程名称',\r\n              prop: 'name',\r\n              search: true,\r\n            },\r\n            {\r\n              label: '流程版本',\r\n              prop: 'version',\r\n              slot: true,\r\n              width: 80,\r\n            },\r\n            {\r\n              label: '状态',\r\n              prop: 'suspensionState',\r\n              slot: true,\r\n              width: 80,\r\n            },\r\n            {\r\n              label: '部署时间',\r\n              prop: 'deploymentTime',\r\n              width: 165,\r\n            },\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    watch: {\r\n      'mode'() {\r\n        this.onLoad(this.page);\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\", \"flowRoutes\"]),\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n    },\r\n    methods: {\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleStart(row) {\r\n        this.$router.push({path: `/work/process/${flowRoute(this.flowRoutes, row.category)}/form/${row.id}`});\r\n      },\r\n      handleImage(row) {\r\n        this.flowUrl = `/api/blade-flow/process/resource-view?processDefinitionId=${row.id}`;\r\n        this.flowBox = true;\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        const query = {\r\n          ...this.query,\r\n          category: (params.category) ? flowCategory(params.category) : null,\r\n          mode: this.mode\r\n        };\r\n        this.loading = true;\r\n        startList(page.currentPage, page.pageSize, Object.assign(params, query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .none-border {\r\n    border: 0;\r\n    background-color: transparent !important;\r\n  }\r\n</style>\r\n"]}]}