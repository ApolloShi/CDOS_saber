{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/views/system/client.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/views/system/client.vue","mtime":1675244276642},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/shiliangliang/6cloud/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { getList, getDetail, add, update, remove } from \"@/api/system/client\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogClickModal: false,\n        column: [{\n          label: \"应用id\",\n          prop: \"clientId\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入客户端id\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"应用密钥\",\n          prop: \"clientSecret\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入客户端密钥\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"授权类型\",\n          prop: \"authorizedGrantTypes\",\n          type: \"checkbox\",\n          value: \"refresh_token,password,authorization_code\",\n          dicData: [{\n            label: \"refresh_token\",\n            value: \"refresh_token\"\n          }, {\n            label: \"password\",\n            value: \"password\"\n          }, {\n            label: \"authorization_code\",\n            value: \"authorization_code\"\n          }, {\n            label: \"captcha\",\n            value: \"captcha\"\n          }, {\n            label: \"social\",\n            value: \"social\"\n          }],\n          rules: [{\n            required: true,\n            message: \"请输入授权类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"授权范围\",\n          prop: \"scope\",\n          value: \"all\",\n          rules: [{\n            required: true,\n            message: \"请输入授权范围\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"令牌秒数\",\n          prop: \"accessTokenValidity\",\n          type: \"number\",\n          value: 3600,\n          rules: [{\n            required: true,\n            message: \"请输入令牌过期秒数\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"刷新秒数\",\n          prop: \"refreshTokenValidity\",\n          type: \"number\",\n          value: 604800,\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请输入刷新令牌过期秒数\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"回调地址\",\n          prop: \"webServerRedirectUri\",\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请输入回调地址\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"资源集合\",\n          prop: \"resourceIds\",\n          hide: true,\n          rules: [{\n            message: \"请输入资源集合\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"权限\",\n          prop: \"authorities\",\n          hide: true,\n          rules: [{\n            message: \"请输入权限\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"自动授权\",\n          prop: \"autoapprove\",\n          hide: true,\n          rules: [{\n            message: \"请输入自动授权\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"附加说明\",\n          hide: true,\n          prop: \"additionalInformation\",\n          span: 24,\n          rules: [{\n            message: \"请输入附加说明\",\n            trigger: \"blur\"\n          }]\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.client_add),\n        viewBtn: this.vaildData(this.permission.client_view),\n        delBtn: this.vaildData(this.permission.client_delete),\n        editBtn: this.vaildData(this.permission.client_edit)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowSave: function rowSave(row, done, loading) {\n      var _this = this;\n      add(row).then(function () {\n        _this.onLoad(_this.page);\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this2 = this;\n      update(row).then(function () {\n        _this2.onLoad(_this2.page);\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this3 = this;\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this3.onLoad(_this3.page);\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this4 = this;\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this4.ids);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this4.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this5 = this;\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          _this5.form = res.data.data;\n        });\n      }\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this6 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this6.page.total = data.total;\n        _this6.data = data.records;\n        _this6.loading = false;\n        _this6.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;AAkCA;AACA;AAEA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC,SACA;UACAC;UACAC;UACAC;UACAC;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAC;UACAC;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAM;UACAC;UACAC,UACA;YACAT;YACAQ;UACA,GACA;YACAR;YACAQ;UACA,GACA;YACAR;YACAQ;UACA,GACA;YACAR;YACAQ;UACA,GACA;YACAR;YACAQ;UACA,EACA;UACAL;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAO;UACAL;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAM;UACAC;UACAL;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAM;UACAC;UACAE;UACAP;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAS;UACAP;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAS;UACAP;YACAE;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAS;UACAP;YACAE;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAS;UACAP;YACAE;YACAC;UACA;QACA,GACA;UACAN;UACAU;UACAT;UACAU;UACAR;YACAE;YACAC;UACA;QACA;MAEA;MACA3B;IACA;EACA;EACAiC,0CACAC;IACAC;MACA;QACAC;QACAnB;QACAoB;QACAC;MACA;IACA;IACAC;MACA;MACA;QACAA;MACA;MACA;IACA;EAAA,EACA;EACAC;IACAC;MAAA;MACAC;QACA;QACA;UACAd;UACAF;QACA;QACAiB;MACA;QACAC;QACAzC;MACA;IACA;IACA0C;MAAA;MACAC;QACA;QACA;UACAlB;UACAF;QACA;QACAiB;MACA;QACAC;QACAzC;MACA;IACA;IACA4C;MAAA;MACA;QACAC;QACAC;QACArB;MACA,GACAsB;QACA;MACA,GACAA;QACA;QACA;UACAtB;UACAF;QACA;MACA;IACA;IACAyB;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACAT;IACA;IACAU;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MAAA;MACA;QACA;QACA;MACA;MACA;QACAP;QACAC;QACArB;MACA,GACAsB;QACA;MACA,GACAA;QACA;QACA;UACAtB;UACAF;QACA;QACA;MACA;IACA;IACA8B;MAAA;MACA;QACAC;UACA;QACA;MACA;MACAd;IACA;IACAe;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MAAA;MACA;MACAC;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["data","form","query","loading","page","pageSize","currentPage","total","selectionList","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","viewBtn","selection","dialogClickModal","column","label","prop","search","rules","required","message","trigger","type","value","dicData","hide","span","computed","mapGetters","permissionList","addBtn","delBtn","editBtn","ids","methods","rowSave","add","done","window","rowUpdate","update","rowDel","confirmButtonText","cancelButtonText","then","searchReset","searchChange","selectionChange","selectionClear","handleDelete","beforeOpen","getDetail","currentChange","sizeChange","refreshChange","onLoad","getList"],"sourceRoot":"src/views/system","sources":["client.vue"],"sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page.sync=\"page\"\r\n               @row-del=\"rowDel\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               :permission=\"permissionList\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               :before-open=\"beforeOpen\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.client_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n    </avue-crud>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, add, update, remove} from \"@/api/system/client\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 30,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"应用id\",\r\n              prop: \"clientId\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入客户端id\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"应用密钥\",\r\n              prop: \"clientSecret\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入客户端密钥\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"授权类型\",\r\n              prop: \"authorizedGrantTypes\",\r\n              type: \"checkbox\",\r\n              value: \"refresh_token,password,authorization_code\",\r\n              dicData: [\r\n                {\r\n                  label: \"refresh_token\",\r\n                  value: \"refresh_token\"\r\n                },\r\n                {\r\n                  label: \"password\",\r\n                  value: \"password\"\r\n                },\r\n                {\r\n                  label: \"authorization_code\",\r\n                  value: \"authorization_code\"\r\n                },\r\n                {\r\n                  label: \"captcha\",\r\n                  value: \"captcha\"\r\n                },\r\n                {\r\n                  label: \"social\",\r\n                  value: \"social\"\r\n                }\r\n              ],\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入授权类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"授权范围\",\r\n              prop: \"scope\",\r\n              value: \"all\",\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入授权范围\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"令牌秒数\",\r\n              prop: \"accessTokenValidity\",\r\n              type: \"number\",\r\n              value: 3600,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入令牌过期秒数\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"刷新秒数\",\r\n              prop: \"refreshTokenValidity\",\r\n              type: \"number\",\r\n              value: 604800,\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入刷新令牌过期秒数\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"回调地址\",\r\n              prop: \"webServerRedirectUri\",\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入回调地址\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"资源集合\",\r\n              prop: \"resourceIds\",\r\n              hide: true,\r\n              rules: [{\r\n                message: \"请输入资源集合\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"权限\",\r\n              prop: \"authorities\",\r\n              hide: true,\r\n              rules: [{\r\n                message: \"请输入权限\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"自动授权\",\r\n              prop: \"autoapprove\",\r\n              hide: true,\r\n              rules: [{\r\n                message: \"请输入自动授权\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"附加说明\",\r\n              hide: true,\r\n              prop: \"additionalInformation\",\r\n              span: 24,\r\n              rules: [{\r\n                message: \"请输入附加说明\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.client_add),\r\n          viewBtn: this.vaildData(this.permission.client_view),\r\n          delBtn: this.vaildData(this.permission.client_delete),\r\n          editBtn: this.vaildData(this.permission.client_edit)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}