{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/page/index/top/top-theme.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/page/index/top/top-theme.vue","mtime":1675244276595},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/shiliangliang/6cloud/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { setTheme } from \"@/util/util\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      box: false,\n      text: \"\",\n      list: [{\n        name: \"默认主题\",\n        value: \"default\"\n      }, {\n        name: \"白色主题\",\n        value: \"theme-white\"\n      }, {\n        name: \"黑色主题\",\n        value: \"theme-dark\"\n      }, {\n        name: \"炫彩主题\",\n        value: \"theme-star\"\n      }, {\n        name: \"智能主题\",\n        value: \"theme-bule\"\n      }, {\n        name: \"iview主题\",\n        value: \"theme-iview\"\n      }, {\n        name: \"vip主题\",\n        value: \"theme-vip\"\n      }, {\n        name: \"cool主题\",\n        value: \"theme-cool\"\n      }, {\n        name: \"d2主题\",\n        value: \"theme-d2\"\n      }, {\n        name: \"hey主题\",\n        value: \"theme-hey\"\n      }, {\n        name: \"lte主题\",\n        value: \"theme-lte\"\n      }]\n    };\n  },\n  watch: {\n    text: function text(val) {\n      this.$store.commit(\"SET_THEME_NAME\", val);\n      setTheme(val);\n    }\n  },\n  computed: _objectSpread({}, mapGetters([\"themeName\"])),\n  mounted: function mounted() {\n    this.text = this.themeName;\n    if (!this.text) {\n      this.text = \"\";\n    }\n  },\n  methods: {\n    open: function open() {\n      this.box = true;\n    }\n  }\n};",{"version":3,"mappings":";;;;;;AA4BA;AACA;AACA;EACAA;IACA;MACAC;MACAC;MACAC,OACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA;IAEA;EACA;EACAC;IACAJ;MACA;MACAK;IACA;EACA;EACAC,4BACAC,0BACA;EACAC;IACA;IACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;AACA","names":["data","box","text","list","name","value","watch","setTheme","computed","mapGetters","mounted","methods","open"],"sourceRoot":"src/page/index/top","sources":["top-theme.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog title=\"选择\"\r\n               append-to-body\r\n               :visible.sync=\"box\"\r\n               width=\"50%\">\r\n      <el-radio-group v-model=\"text\"\r\n                      class=\"list\">\r\n        <el-row :span=\"24\">\r\n          <el-col v-for=\"(item,index) in list\"\r\n                  :key=\"index\"\r\n                  :md=\"4\"\r\n                  :xs=\"12\"\r\n                  :sm=\"4\">\r\n            <el-radio :label=\"item.value\">{{item.name}}</el-radio>\r\n          </el-col>\r\n        </el-row>\r\n      </el-radio-group>\r\n    </el-dialog>\r\n\r\n    <span>\r\n      <i class=\"icon-zhuti\"\r\n         @click=\"open\"></i>\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { setTheme } from \"@/util/util\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data () {\r\n    return {\r\n      box: false,\r\n      text: \"\",\r\n      list: [\r\n        {\r\n          name: \"默认主题\",\r\n          value: \"default\"\r\n        },\r\n        {\r\n          name: \"白色主题\",\r\n          value: \"theme-white\"\r\n        },\r\n        {\r\n          name: \"黑色主题\",\r\n          value: \"theme-dark\"\r\n        },\r\n        {\r\n          name: \"炫彩主题\",\r\n          value: \"theme-star\"\r\n        },\r\n        {\r\n          name: \"智能主题\",\r\n          value: \"theme-bule\"\r\n        },\r\n        {\r\n          name: \"iview主题\",\r\n          value: \"theme-iview\"\r\n        },\r\n        {\r\n          name: \"vip主题\",\r\n          value: \"theme-vip\"\r\n        },\r\n        {\r\n          name: \"cool主题\",\r\n          value: \"theme-cool\"\r\n        },\r\n        {\r\n          name: \"d2主题\",\r\n          value: \"theme-d2\"\r\n        },\r\n        {\r\n          name: \"hey主题\",\r\n          value: \"theme-hey\"\r\n        },\r\n        {\r\n          name: \"lte主题\",\r\n          value: \"theme-lte\"\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  watch: {\r\n    text: function (val) {\r\n      this.$store.commit(\"SET_THEME_NAME\", val);\r\n      setTheme(val);\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"themeName\"])\r\n  },\r\n  mounted () {\r\n    this.text = this.themeName;\r\n    if (!this.text) {\r\n      this.text = \"\";\r\n    }\r\n  },\r\n  methods: {\r\n    open () {\r\n      this.box = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.list {\r\n  width: 100%;\r\n}\r\n</style>\r\n\r\n"]}]}