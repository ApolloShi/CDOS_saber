{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js??ref--13-0!/Users/shiliangliang/6cloud/saber/src/util/date.js","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/util/date.js","mtime":1675244276627},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js","mtime":1676864063827}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nexport var calcDate = function calcDate(date1, date2) {\n  var date3 = date2 - date1;\n  var days = Math.floor(date3 / (24 * 3600 * 1000));\n  var leave1 = date3 % (24 * 3600 * 1000); //计算天数后剩余的毫秒数\n  var hours = Math.floor(leave1 / (3600 * 1000));\n  var leave2 = leave1 % (3600 * 1000); //计算小时数后剩余的毫秒数\n  var minutes = Math.floor(leave2 / (60 * 1000));\n  var leave3 = leave2 % (60 * 1000); //计算分钟数后剩余的毫秒数\n  var seconds = Math.round(date3 / 1000);\n  return {\n    leave1: leave1,\n    leave2: leave2,\n    leave3: leave3,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n};\n\n/**\r\n * 日期格式化\r\n */\nexport function dateFormat(date, format) {\n  format = format || 'yyyy-MM-dd hh:mm:ss';\n  if (date !== 'Invalid Date') {\n    var o = {\n      \"M+\": date.getMonth() + 1,\n      //month\n      \"d+\": date.getDate(),\n      //day\n      \"h+\": date.getHours(),\n      //hour\n      \"m+\": date.getMinutes(),\n      //minute\n      \"s+\": date.getSeconds(),\n      //second\n      \"q+\": Math.floor((date.getMonth() + 3) / 3),\n      //quarter\n      \"S\": date.getMilliseconds() //millisecond\n    };\n\n    if (/(y+)/.test(format)) format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o) if (new RegExp(\"(\" + k + \")\").test(format)) format = format.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n    return format;\n  }\n  return '';\n}",{"version":3,"names":["calcDate","date1","date2","date3","days","Math","floor","leave1","hours","leave2","minutes","leave3","seconds","round","dateFormat","date","format","o","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k"],"sources":["/Users/shiliangliang/6cloud/saber/src/util/date.js"],"sourcesContent":["export const calcDate = (date1, date2) => {\r\n  let date3 = date2 - date1;\r\n\r\n  let days = Math.floor(date3 / (24 * 3600 * 1000))\r\n\r\n  let leave1 = date3 % (24 * 3600 * 1000) //计算天数后剩余的毫秒数\r\n  let hours = Math.floor(leave1 / (3600 * 1000))\r\n\r\n  let leave2 = leave1 % (3600 * 1000) //计算小时数后剩余的毫秒数\r\n  let minutes = Math.floor(leave2 / (60 * 1000))\r\n\r\n  let leave3 = leave2 % (60 * 1000) //计算分钟数后剩余的毫秒数\r\n  let seconds = Math.round(date3 / 1000)\r\n  return {\r\n    leave1,\r\n    leave2,\r\n    leave3,\r\n    days: days,\r\n    hours: hours,\r\n    minutes: minutes,\r\n    seconds: seconds,\r\n  }\r\n}\r\n\r\n/**\r\n * 日期格式化\r\n */\r\nexport function dateFormat(date, format) {\r\n  format = format || 'yyyy-MM-dd hh:mm:ss';\r\n  if (date !== 'Invalid Date') {\r\n    let o = {\r\n      \"M+\": date.getMonth() + 1, //month\r\n      \"d+\": date.getDate(), //day\r\n      \"h+\": date.getHours(), //hour\r\n      \"m+\": date.getMinutes(), //minute\r\n      \"s+\": date.getSeconds(), //second\r\n      \"q+\": Math.floor((date.getMonth() + 3) / 3), //quarter\r\n      \"S\": date.getMilliseconds() //millisecond\r\n    }\r\n    if (/(y+)/.test(format)) format = format.replace(RegExp.$1,\r\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n    for (let k in o)\r\n      if (new RegExp(\"(\" + k + \")\").test(format))\r\n        format = format.replace(RegExp.$1,\r\n          RegExp.$1.length === 1 ? o[k] :\r\n            (\"00\" + o[k]).substr((\"\" + o[k]).length));\r\n    return format;\r\n  }\r\n  return '';\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,KAAK,EAAEC,KAAK,EAAK;EACxC,IAAIC,KAAK,GAAGD,KAAK,GAAGD,KAAK;EAEzB,IAAIG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;EAEjD,IAAII,MAAM,GAAGJ,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,EAAC;EACxC,IAAIK,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACC,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;EAE9C,IAAIE,MAAM,GAAGF,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,EAAC;EACpC,IAAIG,OAAO,GAAGL,IAAI,CAACC,KAAK,CAACG,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;EAE9C,IAAIE,MAAM,GAAGF,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,EAAC;EAClC,IAAIG,OAAO,GAAGP,IAAI,CAACQ,KAAK,CAACV,KAAK,GAAG,IAAI,CAAC;EACtC,OAAO;IACLI,MAAM,EAANA,MAAM;IACNE,MAAM,EAANA,MAAM;IACNE,MAAM,EAANA,MAAM;IACNP,IAAI,EAAEA,IAAI;IACVI,KAAK,EAAEA,KAAK;IACZE,OAAO,EAAEA,OAAO;IAChBE,OAAO,EAAEA;EACX,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,OAAO,SAASE,UAAU,CAACC,IAAI,EAAEC,MAAM,EAAE;EACvCA,MAAM,GAAGA,MAAM,IAAI,qBAAqB;EACxC,IAAID,IAAI,KAAK,cAAc,EAAE;IAC3B,IAAIE,CAAC,GAAG;MACN,IAAI,EAAEF,IAAI,CAACG,QAAQ,EAAE,GAAG,CAAC;MAAE;MAC3B,IAAI,EAAEH,IAAI,CAACI,OAAO,EAAE;MAAE;MACtB,IAAI,EAAEJ,IAAI,CAACK,QAAQ,EAAE;MAAE;MACvB,IAAI,EAAEL,IAAI,CAACM,UAAU,EAAE;MAAE;MACzB,IAAI,EAAEN,IAAI,CAACO,UAAU,EAAE;MAAE;MACzB,IAAI,EAAEjB,IAAI,CAACC,KAAK,CAAC,CAACS,IAAI,CAACG,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;MAAE;MAC7C,GAAG,EAAEH,IAAI,CAACQ,eAAe,EAAE,CAAC;IAC9B,CAAC;;IACD,IAAI,MAAM,CAACC,IAAI,CAACR,MAAM,CAAC,EAAEA,MAAM,GAAGA,MAAM,CAACS,OAAO,CAACC,MAAM,CAACC,EAAE,EACxD,CAACZ,IAAI,CAACa,WAAW,EAAE,GAAG,EAAE,EAAEC,MAAM,CAAC,CAAC,GAAGH,MAAM,CAACC,EAAE,CAACG,MAAM,CAAC,CAAC;IACzD,KAAK,IAAIC,CAAC,IAAId,CAAC,EACb,IAAI,IAAIS,MAAM,CAAC,GAAG,GAAGK,CAAC,GAAG,GAAG,CAAC,CAACP,IAAI,CAACR,MAAM,CAAC,EACxCA,MAAM,GAAGA,MAAM,CAACS,OAAO,CAACC,MAAM,CAACC,EAAE,EAC/BD,MAAM,CAACC,EAAE,CAACG,MAAM,KAAK,CAAC,GAAGb,CAAC,CAACc,CAAC,CAAC,GAC3B,CAAC,IAAI,GAAGd,CAAC,CAACc,CAAC,CAAC,EAAEF,MAAM,CAAC,CAAC,EAAE,GAAGZ,CAAC,CAACc,CAAC,CAAC,EAAED,MAAM,CAAC,CAAC;IACjD,OAAOd,MAAM;EACf;EACA,OAAO,EAAE;AAEX"}]}