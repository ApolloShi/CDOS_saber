{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/page/login/codelogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/page/login/codelogin.vue","mtime":1675244276595},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/shiliangliang/6cloud/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { isvalidatemobile } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"codelogin\",\n  data: function data() {\n    var validatePhone = function validatePhone(rule, value, callback) {\n      if (isvalidatemobile(value)[0]) {\n        callback(new Error(isvalidatemobile(value)[1]));\n      } else {\n        callback();\n      }\n    };\n    var validateCode = function validateCode(rule, value, callback) {\n      if (value.length !== 4) {\n        callback(new Error(\"请输入4位数的验证码\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      msgText: \"\",\n      msgTime: \"\",\n      msgKey: false,\n      loginForm: {\n        phone: \"\",\n        code: \"\"\n      },\n      loginRules: {\n        phone: [{\n          required: true,\n          trigger: \"blur\",\n          validator: validatePhone\n        }],\n        code: [{\n          required: true,\n          trigger: \"blur\",\n          validator: validateCode\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.msgText = this.config.MSGINIT;\n    this.msgTime = this.config.MSGTIME;\n  },\n  mounted: function mounted() {},\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"tagWel\"])), {}, {\n    config: function config() {\n      return {\n        MSGINIT: this.$t(\"login.msgText\"),\n        MSGSCUCCESS: this.$t(\"login.msgSuccess\"),\n        MSGTIME: 60\n      };\n    }\n  }),\n  props: [],\n  methods: {\n    handleSend: function handleSend() {\n      var _this = this;\n      if (this.msgKey) return;\n      this.msgText = this.msgTime + this.config.MSGSCUCCESS;\n      this.msgKey = true;\n      var time = setInterval(function () {\n        _this.msgTime--;\n        _this.msgText = _this.msgTime + _this.config.MSGSCUCCESS;\n        if (_this.msgTime === 0) {\n          _this.msgTime = _this.config.MSGTIME;\n          _this.msgText = _this.config.MSGINIT;\n          _this.msgKey = false;\n          clearInterval(time);\n        }\n      }, 1000);\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.$store.dispatch(\"LoginByPhone\", _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.tagWel.value\n            });\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;AA2CA;AACA;AACA;EACAA;EACAC;IACA;MACA;QACAC;MACA;QACAA;MACA;IACA;IACA;MACA;QACAA;MACA;QACAA;MACA;IACA;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;QACAF;UAAAG;UAAAC;UAAAC;QAAA;QACAJ;UAAAE;UAAAC;UAAAC;QAAA;MACA;IACA;EACA;EACAC;IACA;IACA;EACA;EACAC;EACAC,0CACAC;IACAC;MACA;QACAC;QACAC;QACAC;MACA;IACA;EAAA,EACA;EACAC;EACAC;IACAC;MAAA;MACA;MACA;MACA;MACA;QACA;QACA;QACA;UACA;UACA;UACA;UACAC;QACA;MACA;IACA;IACAC;MAAA;MACA;QACA;UACA;YACA;cAAAC;YAAA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","callback","msgText","msgTime","msgKey","loginForm","phone","code","loginRules","required","trigger","validator","created","mounted","computed","mapGetters","config","MSGINIT","MSGSCUCCESS","MSGTIME","props","methods","handleSend","clearInterval","handleLogin","path"],"sourceRoot":"src/page/login","sources":["codelogin.vue"],"sourcesContent":["<template>\r\n  <el-form class=\"login-form\"\r\n           status-icon\r\n           :rules=\"loginRules\"\r\n           ref=\"loginForm\"\r\n           :model=\"loginForm\"\r\n           label-width=\"0\">\r\n    <el-form-item prop=\"phone\">\r\n      <el-input size=\"small\"\r\n                @keyup.enter.native=\"handleLogin\"\r\n                v-model=\"loginForm.phone\"\r\n                auto-complete=\"off\"\r\n                :placeholder=\"$t('login.phone')\">\r\n        <i slot=\"prefix\"\r\n           class=\"icon-shouji\"/>\r\n      </el-input>\r\n    </el-form-item>\r\n    <el-form-item prop=\"code\">\r\n      <el-input size=\"small\"\r\n                @keyup.enter.native=\"handleLogin\"\r\n                v-model=\"loginForm.code\"\r\n                auto-complete=\"off\"\r\n                :placeholder=\"$t('login.code')\">\r\n        <i slot=\"prefix\"\r\n           class=\"icon-yanzhengma\"\r\n           style=\"margin-top:6px;\"/>\r\n        <template slot=\"append\">\r\n          <span @click=\"handleSend\"\r\n                class=\"msg-text\"\r\n                :class=\"[{display:msgKey}]\">{{msgText}}</span>\r\n        </template>\r\n      </el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button size=\"small\"\r\n                 type=\"primary\"\r\n                 @click.native.prevent=\"handleLogin\"\r\n                 class=\"login-submit\">{{$t('login.submit')}}</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport { isvalidatemobile } from \"@/util/validate\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  name: \"codelogin\",\r\n  data() {\r\n    const validatePhone = (rule, value, callback) => {\r\n      if (isvalidatemobile(value)[0]) {\r\n        callback(new Error(isvalidatemobile(value)[1]));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const validateCode = (rule, value, callback) => {\r\n      if (value.length !== 4) {\r\n        callback(new Error(\"请输入4位数的验证码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      msgText: \"\",\r\n      msgTime: \"\",\r\n      msgKey: false,\r\n      loginForm: {\r\n        phone: \"\",\r\n        code: \"\"\r\n      },\r\n      loginRules: {\r\n        phone: [{ required: true, trigger: \"blur\", validator: validatePhone }],\r\n        code: [{ required: true, trigger: \"blur\", validator: validateCode }]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.msgText = this.config.MSGINIT;\r\n    this.msgTime = this.config.MSGTIME;\r\n  },\r\n  mounted() {},\r\n  computed: {\r\n    ...mapGetters([\"tagWel\"]),\r\n    config() {\r\n      return {\r\n        MSGINIT: this.$t(\"login.msgText\"),\r\n        MSGSCUCCESS: this.$t(\"login.msgSuccess\"),\r\n        MSGTIME: 60\r\n      };\r\n    }\r\n  },\r\n  props: [],\r\n  methods: {\r\n    handleSend() {\r\n      if (this.msgKey) return;\r\n      this.msgText = this.msgTime + this.config.MSGSCUCCESS;\r\n      this.msgKey = true;\r\n      const time = setInterval(() => {\r\n        this.msgTime--;\r\n        this.msgText = this.msgTime + this.config.MSGSCUCCESS;\r\n        if (this.msgTime === 0) {\r\n          this.msgTime = this.config.MSGTIME;\r\n          this.msgText = this.config.MSGINIT;\r\n          this.msgKey = false;\r\n          clearInterval(time);\r\n        }\r\n      }, 1000);\r\n    },\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.$store.dispatch(\"LoginByPhone\", this.loginForm).then(() => {\r\n            this.$router.push({ path: this.tagWel.value });\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.msg-text {\r\n  display: block;\r\n  width: 60px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n}\r\n.msg-text.display {\r\n  color: #ccc;\r\n}\r\n</style>\r\n"]}]}