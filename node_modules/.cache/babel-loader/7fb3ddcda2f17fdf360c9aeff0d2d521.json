{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/views/flow/follow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/views/flow/follow.vue","mtime":1675244276627},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/shiliangliang/6cloud/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mapGetters } from \"vuex\";\nimport { followList, deleteProcessInstance } from \"@/api/flow/flow\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      selectionId: '',\n      processInstanceId: '',\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      followBox: false,\n      deleteReason: '',\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        editBtn: false,\n        addBtn: false,\n        viewBtn: false,\n        dialogWidth: 900,\n        menuWidth: 100,\n        dialogClickModal: false,\n        column: [{\n          label: \"执行id\",\n          prop: \"executionId\",\n          search: true,\n          width: 320\n        }, {\n          label: \"流程key\",\n          prop: \"processDefinitionKey\",\n          search: true\n        }, {\n          label: \"实例id\",\n          prop: \"processInstanceId\",\n          search: true,\n          width: 320\n        }, {\n          label: \"状态\",\n          prop: \"suspensionState\",\n          slot: true,\n          width: 80\n        }, {\n          label: \"发起人\",\n          prop: \"startUser\",\n          width: 100\n        }, {\n          label: '开始时间',\n          prop: 'startTime',\n          width: 165\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        delBtn: this.vaildData(this.permission.flow_follow_delete, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowDel: function rowDel(row) {\n      this.followBox = true;\n      this.selectionId = row.id;\n      this.processInstanceId = row.processInstanceId;\n    },\n    handleDelete: function handleDelete() {\n      var _this = this;\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return deleteProcessInstance({\n          deleteReason: _this.deleteReason,\n          processInstanceId: _this.processInstanceId\n        });\n      }).then(function () {\n        _this.onLoad(_this.page);\n        _this.followBox = false;\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this2 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      followList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this2.page.total = data.total;\n        _this2.data = data.records;\n        _this2.loading = false;\n        _this2.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;AA6CA;AACA;AAEA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC,SACA;UACAC;UACAC;UACAC;UACAC;QACA,GACA;UACAH;UACAC;UACAC;QACA,GACA;UACAF;UACAC;UACAC;UACAC;QACA,GACA;UACAH;UACAC;UACAG;UACAD;QACA,GACA;UACAH;UACAC;UACAE;QACA,GACA;UACAH;UACAC;UACAE;QACA;MAEA;MACAhC;IACA;EACA;EACAkC,0CACAC;IACAC;MACA;QACAC;MACA;IACA;IACAC;MACA;MACA;QACAA;MACA;MACA;IACA;EAAA,EACA;EACAC;IACAC;MACA;MACA;MACA;IACA;IACAC;MAAA;MACA;QACAC;QACAC;QACAC;MACA,GACAC;QACA;UAAAjC;UAAAT;QAAA;MACA,GACA0C;QACA;QACA;QACA;UACAD;UACAE;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACAC;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MAAA;MACA;MACAC;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["data","form","selectionId","processInstanceId","selectionList","query","loading","page","pageSize","currentPage","total","followBox","deleteReason","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","selection","editBtn","addBtn","viewBtn","dialogWidth","menuWidth","dialogClickModal","column","label","prop","search","width","slot","computed","mapGetters","permissionList","delBtn","ids","methods","rowDel","handleDelete","confirmButtonText","cancelButtonText","type","then","message","searchReset","searchChange","done","selectionChange","selectionClear","currentChange","sizeChange","refreshChange","onLoad","followList"],"sourceRoot":"src/views/flow","sources":["follow.vue"],"sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :page.sync=\"page\"\r\n               :permission=\"permissionList\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"suspensionState\">\r\n        <el-tag>{{row.suspensionState===1?'激活':'挂起'}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <el-dialog title=\"流程删除\"\r\n               append-to-body\r\n               :visible.sync=\"followBox\"\r\n               width=\"20%\">\r\n      <el-form :model=\"form\"\r\n               ref=\"form\"\r\n               label-width=\"80px\">\r\n        <el-form-item label=\"删除理由\">\r\n          <el-input v-model=\"deleteReason\"\r\n                    placeholder=\"请输入删除理由\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\"\r\n            class=\"dialog-footer\">\r\n        <el-button @click=\"followBox = false\">关 闭</el-button>\r\n        <el-button type=\"primary\"\r\n                   @click=\"handleDelete\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {mapGetters} from \"vuex\";\r\n  import {followList, deleteProcessInstance} from \"@/api/flow/flow\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        selectionId: '',\r\n        processInstanceId: '',\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        followBox: false,\r\n        deleteReason: '',\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 30,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          editBtn: false,\r\n          addBtn: false,\r\n          viewBtn: false,\r\n          dialogWidth: 900,\r\n          menuWidth: 100,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"执行id\",\r\n              prop: \"executionId\",\r\n              search: true,\r\n              width: 320,\r\n            },\r\n            {\r\n              label: \"流程key\",\r\n              prop: \"processDefinitionKey\",\r\n              search: true,\r\n            },\r\n            {\r\n              label: \"实例id\",\r\n              prop: \"processInstanceId\",\r\n              search: true,\r\n              width: 320,\r\n            },\r\n            {\r\n              label: \"状态\",\r\n              prop: \"suspensionState\",\r\n              slot: true,\r\n              width: 80,\r\n            },\r\n            {\r\n              label: \"发起人\",\r\n              prop: \"startUser\",\r\n              width: 100,\r\n            },\r\n            {\r\n              label: '开始时间',\r\n              prop: 'startTime',\r\n              width: 165,\r\n            },\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          delBtn: this.vaildData(this.permission.flow_follow_delete, false),\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowDel(row) {\r\n        this.followBox = true;\r\n        this.selectionId = row.id;\r\n        this.processInstanceId = row.processInstanceId;\r\n      },\r\n      handleDelete() {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return deleteProcessInstance({deleteReason: this.deleteReason, processInstanceId: this.processInstanceId});\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.followBox = false;\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        followList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .none-border {\r\n    border: 0;\r\n    background-color: transparent !important;\r\n  }\r\n</style>\r\n"]}]}