{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/page/logs/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/page/logs/index.vue","mtime":1675244276611},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/shiliangliang/6cloud/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"errLogs\",\n  data: function data() {\n    return {\n      option: {\n        menu: false,\n        addBtn: false,\n        page: false,\n        border: true,\n        expand: true,\n        refreshBtn: false,\n        headerAlign: \"center\",\n        column: [{\n          label: \"类型\",\n          prop: \"type\",\n          width: 80,\n          align: \"center\",\n          slot: true,\n          dicData: [{\n            label: \"bug\",\n            value: \"error\"\n          }]\n        }, {\n          label: \"地址\",\n          width: 200,\n          prop: \"url\",\n          overHidden: true\n        }, {\n          label: \"内容\",\n          prop: \"message\",\n          overHidden: true\n        }, {\n          label: \"错误堆栈\",\n          prop: \"stack\",\n          hide: true\n        }, {\n          label: \"时间\",\n          align: \"center\",\n          prop: \"time\",\n          width: 200\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  computed: _objectSpread({}, mapGetters([\"logsList\"])),\n  props: [],\n  methods: {\n    send: function send() {\n      var _this = this;\n      this.$confirm(\"确定上传本地日志到服务器?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this.$store.dispatch(\"SendLogs\").then(function () {\n          _this.$parent.$parent.box = false;\n          _this.$message({\n            type: \"success\",\n            message: \"发送成功!\"\n          });\n        });\n      }).catch(function () {});\n    },\n    clear: function clear() {\n      var _this2 = this;\n      this.$confirm(\"确定清空本地日志记录?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this2.$store.commit(\"CLEAR_LOGS\");\n        window.console.log(_this2);\n        _this2.$parent.$parent.box = false;\n        _this2.$message({\n          type: \"success\",\n          message: \"清空成功!\"\n        });\n      }).catch(function () {});\n    }\n  }\n};",{"version":3,"mappings":";;;;;;AA4BA;AACA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC,SACA;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC,UACA;YACAL;YACAM;UACA;QAEA,GACA;UACAN;UACAE;UACAD;UACAM;QACA,GACA;UACAP;UACAC;UACAM;QACA,GACA;UACAP;UACAC;UACAO;QACA,GACA;UACAR;UACAG;UACAF;UACAC;QACA;MAEA;IACA;EACA;EACAO;EACAC;EACAC,4BACAC,yBACA;EACAC;EACAC;IACAC;MAAA;MACA;QACAC;QACAC;QACAC;MACA,GACAC;QACA;UACA;UACA;YACAD;YACAE;UACA;QACA;MACA,GACAC;IACA;IACAC;MAAA;MACA;QACAN;QACAC;QACAC;MACA,GACAC;QACA;QACAI;QACA;QACA;UACAL;UACAE;QACA;MACA,GACAC;IACA;EACA;AACA","names":["name","data","option","menu","addBtn","page","border","expand","refreshBtn","headerAlign","column","label","prop","width","align","slot","dicData","value","overHidden","hide","created","mounted","computed","mapGetters","props","methods","send","confirmButtonText","cancelButtonText","type","then","message","catch","clear","window"],"sourceRoot":"src/page/logs","sources":["index.vue"],"sourcesContent":["<template>\r\n  <avue-crud :data=\"logsList\"\r\n             :option=\"option\">\r\n    <template slot=\"menuLeft\">\r\n      <el-button type=\"primary\"\r\n                 size=\"small\"\r\n                 icon=\"el-icon-upload\"\r\n                 @click=\"send\">上传服务器</el-button>\r\n      <el-button type=\"danger\"\r\n                 size=\"small\"\r\n                 icon=\"el-icon-delete\"\r\n                 @click=\"clear\">清空本地日志</el-button>\r\n    </template>\r\n    <template slot-scope=\"scope\"\r\n              slot=\"type\">\r\n      <el-tag type=\"danger\"\r\n              size=\"small\">{{scope.label}}</el-tag>\r\n    </template>\r\n    <template slot-scope=\"props\"\r\n              slot=\"expand\">\r\n      <pre class=\"code\">\r\n        {{props.row.stack}}\r\n      </pre>\r\n    </template>\r\n  </avue-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  name: \"errLogs\",\r\n  data() {\r\n    return {\r\n      option: {\r\n        menu: false,\r\n        addBtn: false,\r\n        page: false,\r\n        border: true,\r\n        expand: true,\r\n        refreshBtn: false,\r\n        headerAlign: \"center\",\r\n        column: [\r\n          {\r\n            label: \"类型\",\r\n            prop: \"type\",\r\n            width: 80,\r\n            align: \"center\",\r\n            slot: true,\r\n            dicData: [\r\n              {\r\n                label: \"bug\",\r\n                value: \"error\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            label: \"地址\",\r\n            width: 200,\r\n            prop: \"url\",\r\n            overHidden: true\r\n          },\r\n          {\r\n            label: \"内容\",\r\n            prop: \"message\",\r\n            overHidden: true\r\n          },\r\n          {\r\n            label: \"错误堆栈\",\r\n            prop: \"stack\",\r\n            hide: true\r\n          },\r\n          {\r\n            label: \"时间\",\r\n            align: \"center\",\r\n            prop: \"time\",\r\n            width: 200\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  created() {},\r\n  mounted() {},\r\n  computed: {\r\n    ...mapGetters([\"logsList\"])\r\n  },\r\n  props: [],\r\n  methods: {\r\n    send() {\r\n      this.$confirm(\"确定上传本地日志到服务器?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.$store.dispatch(\"SendLogs\").then(() => {\r\n            this.$parent.$parent.box = false;\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"发送成功!\"\r\n            });\r\n          });\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    clear() {\r\n      this.$confirm(\"确定清空本地日志记录?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.$store.commit(\"CLEAR_LOGS\");\r\n          window.console.log(this);\r\n          this.$parent.$parent.box = false;\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"清空成功!\"\r\n          });\r\n        })\r\n        .catch(() => {});\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.code {\r\n  font-size: 12px;\r\n  display: block;\r\n  font-family: monospace;\r\n  white-space: pre;\r\n  margin: 1em 0px;\r\n}\r\n</style>\r\n"]}]}