{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js??ref--13-0!/Users/shiliangliang/6cloud/saber/src/mixins/color.js","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/mixins/color.js","mtime":1675244276580},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js","mtime":1676864063827}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/Users/shiliangliang/6cloud/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mapGetters } from \"vuex\";\nvar version = require(\"element-ui/package.json\").version; // element-ui version from node_modules\nvar ORIGINAL_THEME = \"#409EFF\"; // default color\nexport default function () {\n  return {\n    data: function data() {\n      return {\n        themeVal: ORIGINAL_THEME\n      };\n    },\n    created: function created() {\n      this.themeVal = this.colorName;\n    },\n    watch: {\n      themeVal: function themeVal(val, oldVal) {\n        this.$store.commit(\"SET_COLOR_NAME\", val);\n        this.updateTheme(val, oldVal);\n      }\n    },\n    computed: _objectSpread({}, mapGetters([\"colorName\"])),\n    methods: {\n      updateTheme: function updateTheme(val, oldVal) {\n        var _this = this;\n        if (typeof val !== \"string\") return;\n        var head = document.getElementsByTagName(\"head\")[0];\n        var themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\n        var originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\n        var getHandler = function getHandler(variable, id) {\n          return function () {\n            var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace(\"#\", \"\"));\n            var newStyle = _this.updateStyle(_this[variable], originalCluster, themeCluster);\n            var styleTag = document.getElementById(id);\n            if (!styleTag) {\n              styleTag = document.createElement(\"style\");\n              styleTag.setAttribute(\"id\", id);\n              head.appendChild(styleTag);\n            }\n            styleTag.innerText = newStyle;\n          };\n        };\n        var chalkHandler = getHandler(\"chalk\", \"chalk-style\");\n        if (!this.chalk) {\n          var url = \"/cdn/element-ui/\".concat(version, \"/theme-chalk/index.css\");\n          this.getCSSString(url, chalkHandler, \"chalk\");\n        } else {\n          chalkHandler();\n        }\n        var link = [].slice.call(document.getElementsByTagName(\"head\")[0].getElementsByTagName(\"link\"));\n        var _loop = function _loop(i) {\n          var style = link[i];\n          if (style.href.includes('css')) {\n            _this.getCSSString(style.href, function (innerText) {\n              var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace(\"#\", \"\"));\n              var newStyle = _this.updateStyle(innerText, originalCluster, themeCluster);\n              var styleTag = document.getElementById(i);\n              if (!styleTag) {\n                styleTag = document.createElement(\"style\");\n                styleTag.id = i;\n                styleTag.innerText = newStyle;\n                head.appendChild(styleTag);\n              }\n            });\n          }\n        };\n        for (var i = 0; i < link.length; i++) {\n          _loop(i);\n        }\n        var styles = [].slice.call(document.querySelectorAll(\"style\"));\n        styles.forEach(function (style) {\n          var innerText = style.innerText;\n          if (typeof innerText !== \"string\") return;\n          style.innerText = _this.updateStyle(innerText, originalCluster, themeCluster);\n        });\n      },\n      updateStyle: function updateStyle(style, oldCluster, newCluster) {\n        var newStyle = style;\n        oldCluster.forEach(function (color, index) {\n          newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\n        });\n        return newStyle;\n      },\n      getCSSString: function getCSSString(url, callback, variable) {\n        var _this2 = this;\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            if (variable) {\n              _this2[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\n            }\n            callback(xhr.responseText);\n          }\n        };\n        xhr.open(\"GET\", url);\n        xhr.send();\n      },\n      getThemeCluster: function getThemeCluster(theme) {\n        var tintColor = function tintColor(color, tint) {\n          var red = parseInt(color.slice(0, 2), 16);\n          var green = parseInt(color.slice(2, 4), 16);\n          var blue = parseInt(color.slice(4, 6), 16);\n          if (tint === 0) {\n            // when primary color is in its rgb space\n            return [red, green, blue].join(\",\");\n          } else {\n            red += Math.round(tint * (255 - red));\n            green += Math.round(tint * (255 - green));\n            blue += Math.round(tint * (255 - blue));\n            red = red.toString(16);\n            green = green.toString(16);\n            blue = blue.toString(16);\n            return \"#\".concat(red).concat(green).concat(blue);\n          }\n        };\n        var shadeColor = function shadeColor(color, shade) {\n          var red = parseInt(color.slice(0, 2), 16);\n          var green = parseInt(color.slice(2, 4), 16);\n          var blue = parseInt(color.slice(4, 6), 16);\n          red = Math.round((1 - shade) * red);\n          green = Math.round((1 - shade) * green);\n          blue = Math.round((1 - shade) * blue);\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n          return \"#\".concat(red).concat(green).concat(blue);\n        };\n        var clusters = [theme];\n        for (var i = 0; i <= 9; i++) {\n          clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n        }\n        clusters.push(shadeColor(theme, 0.1));\n        return clusters;\n      }\n    }\n  };\n}",{"version":3,"names":["mapGetters","version","require","ORIGINAL_THEME","data","themeVal","created","colorName","watch","val","oldVal","$store","commit","updateTheme","computed","methods","head","document","getElementsByTagName","themeCluster","getThemeCluster","replace","originalCluster","getHandler","variable","id","newStyle","updateStyle","styleTag","getElementById","createElement","setAttribute","appendChild","innerText","chalkHandler","chalk","url","getCSSString","link","slice","call","style","i","href","includes","length","styles","querySelectorAll","forEach","oldCluster","newCluster","color","index","RegExp","callback","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","theme","tintColor","tint","red","parseInt","green","blue","join","Math","round","toString","shadeColor","shade","clusters","push","Number","toFixed"],"sources":["/Users/shiliangliang/6cloud/saber/src/mixins/color.js"],"sourcesContent":["import { mapGetters } from \"vuex\";\r\nconst version = require(\"element-ui/package.json\").version; // element-ui version from node_modules\r\nconst ORIGINAL_THEME = \"#409EFF\"; // default color\r\nexport default function () {\r\n  return {\r\n    data() {\r\n      return {\r\n        themeVal: ORIGINAL_THEME\r\n      }\r\n    },\r\n    created() {\r\n      this.themeVal = this.colorName;\r\n    },\r\n    watch: {\r\n      themeVal(val, oldVal) {\r\n        this.$store.commit(\"SET_COLOR_NAME\", val);\r\n        this.updateTheme(val, oldVal);\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"colorName\"])\r\n    },\r\n    methods: {\r\n      updateTheme(val, oldVal) {\r\n        if (typeof val !== \"string\") return;\r\n        const head = document.getElementsByTagName(\"head\")[0];\r\n        const themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\r\n        const originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\r\n        const getHandler = (variable, id) => {\r\n          return () => {\r\n            const originalCluster = this.getThemeCluster(\r\n              ORIGINAL_THEME.replace(\"#\", \"\")\r\n            );\r\n            const newStyle = this.updateStyle(\r\n              this[variable],\r\n              originalCluster,\r\n              themeCluster\r\n            );\r\n\r\n            let styleTag = document.getElementById(id);\r\n            if (!styleTag) {\r\n              styleTag = document.createElement(\"style\");\r\n              styleTag.setAttribute(\"id\", id);\r\n              head.appendChild(styleTag);\r\n            }\r\n            styleTag.innerText = newStyle;\r\n          };\r\n        };\r\n\r\n        const chalkHandler = getHandler(\"chalk\", \"chalk-style\");\r\n\r\n        if (!this.chalk) {\r\n          const url = `/cdn/element-ui/${version}/theme-chalk/index.css`;\r\n          this.getCSSString(url, chalkHandler, \"chalk\");\r\n        } else {\r\n          chalkHandler();\r\n        }\r\n\r\n        const link = [].slice.call(\r\n          document.getElementsByTagName(\"head\")[0].getElementsByTagName(\"link\")\r\n        );\r\n        for (let i = 0; i < link.length; i++) {\r\n          const style = link[i];\r\n          if (style.href.includes('css')) {\r\n            this.getCSSString(style.href, innerText => {\r\n              const originalCluster = this.getThemeCluster(\r\n                ORIGINAL_THEME.replace(\"#\", \"\")\r\n              );\r\n              const newStyle = this.updateStyle(\r\n                innerText,\r\n                originalCluster,\r\n                themeCluster\r\n              );\r\n              let styleTag = document.getElementById(i);\r\n              if (!styleTag) {\r\n                styleTag = document.createElement(\"style\");\r\n                styleTag.id = i;\r\n                styleTag.innerText = newStyle;\r\n                head.appendChild(styleTag);\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        const styles = [].slice.call(document.querySelectorAll(\"style\"))\r\n\r\n        styles.forEach(style => {\r\n          const {\r\n            innerText\r\n          } = style;\r\n          if (typeof innerText !== \"string\") return;\r\n          style.innerText = this.updateStyle(\r\n            innerText,\r\n            originalCluster,\r\n            themeCluster\r\n          );\r\n        });\r\n      },\r\n      updateStyle(style, oldCluster, newCluster) {\r\n        let newStyle = style;\r\n        oldCluster.forEach((color, index) => {\r\n          newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\r\n        });\r\n        return newStyle;\r\n      },\r\n\r\n      getCSSString(url, callback, variable) {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState === 4 && xhr.status === 200) {\r\n            if (variable) {\r\n              this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\r\n            }\r\n            callback(xhr.responseText);\r\n          }\r\n        };\r\n        xhr.open(\"GET\", url);\r\n        xhr.send();\r\n      },\r\n\r\n      getThemeCluster(theme) {\r\n        const tintColor = (color, tint) => {\r\n          let red = parseInt(color.slice(0, 2), 16);\r\n          let green = parseInt(color.slice(2, 4), 16);\r\n          let blue = parseInt(color.slice(4, 6), 16);\r\n\r\n          if (tint === 0) {\r\n            // when primary color is in its rgb space\r\n            return [red, green, blue].join(\",\");\r\n          } else {\r\n            red += Math.round(tint * (255 - red));\r\n            green += Math.round(tint * (255 - green));\r\n            blue += Math.round(tint * (255 - blue));\r\n\r\n            red = red.toString(16);\r\n            green = green.toString(16);\r\n            blue = blue.toString(16);\r\n\r\n            return `#${red}${green}${blue}`;\r\n          }\r\n        };\r\n\r\n        const shadeColor = (color, shade) => {\r\n          let red = parseInt(color.slice(0, 2), 16);\r\n          let green = parseInt(color.slice(2, 4), 16);\r\n          let blue = parseInt(color.slice(4, 6), 16);\r\n\r\n          red = Math.round((1 - shade) * red);\r\n          green = Math.round((1 - shade) * green);\r\n          blue = Math.round((1 - shade) * blue);\r\n\r\n          red = red.toString(16);\r\n          green = green.toString(16);\r\n          blue = blue.toString(16);\r\n\r\n          return `#${red}${green}${blue}`;\r\n        };\r\n\r\n        const clusters = [theme];\r\n        for (let i = 0; i <= 9; i++) {\r\n          clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\r\n        }\r\n        clusters.push(shadeColor(theme, 0.1));\r\n        return clusters;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"}]}