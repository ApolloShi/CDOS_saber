{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js??ref--13-0!/Users/shiliangliang/6cloud/saber/src/store/modules/dict.js","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/store/modules/dict.js","mtime":1675244276611},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js","mtime":1676864063827}],"contextDependencies":[],"result":["import { getStore, setStore } from '@/util/store';\nimport { getDictionary } from '@/api/system/dict';\nvar dict = {\n  state: {\n    flowRoutes: getStore({\n      name: 'flowRoutes'\n    }) || {}\n  },\n  actions: {\n    FlowRoutes: function FlowRoutes(_ref) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        getDictionary({\n          code: 'flow'\n        }).then(function (res) {\n          commit('SET_FLOW_ROUTES', res.data.data);\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    }\n  },\n  mutations: {\n    SET_FLOW_ROUTES: function SET_FLOW_ROUTES(state, data) {\n      state.flowRoutes = data.map(function (item) {\n        return {\n          routeKey: \"\".concat(item.code, \"_\").concat(item.dictKey),\n          routeValue: item.remark\n        };\n      });\n      setStore({\n        name: 'flowRoutes',\n        content: state.flowRoutes\n      });\n    }\n  }\n};\nexport default dict;",{"version":3,"names":["getStore","setStore","getDictionary","dict","state","flowRoutes","name","actions","FlowRoutes","commit","Promise","resolve","reject","code","then","res","data","catch","error","mutations","SET_FLOW_ROUTES","map","item","routeKey","dictKey","routeValue","remark","content"],"sources":["/Users/shiliangliang/6cloud/saber/src/store/modules/dict.js"],"sourcesContent":["import {getStore, setStore} from '@/util/store'\r\n\r\nimport {getDictionary} from '@/api/system/dict'\r\n\r\nconst dict = {\r\n  state: {\r\n    flowRoutes: getStore({name: 'flowRoutes'}) || {},\r\n  },\r\n  actions: {\r\n    FlowRoutes({commit}) {\r\n      return new Promise((resolve, reject) => {\r\n        getDictionary({code: 'flow'}).then(res => {\r\n          commit('SET_FLOW_ROUTES', res.data.data);\r\n          resolve();\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n  },\r\n  mutations: {\r\n    SET_FLOW_ROUTES: (state, data) => {\r\n      state.flowRoutes = data.map(item => {\r\n        return {\r\n          routeKey: `${item.code}_${item.dictKey}`,\r\n          routeValue: item.remark,\r\n        };\r\n      });\r\n      setStore({name: 'flowRoutes', content: state.flowRoutes})\r\n    },\r\n  }\r\n\r\n};\r\n\r\nexport default dict;\r\n"],"mappings":"AAAA,SAAQA,QAAQ,EAAEC,QAAQ,QAAO,cAAc;AAE/C,SAAQC,aAAa,QAAO,mBAAmB;AAE/C,IAAMC,IAAI,GAAG;EACXC,KAAK,EAAE;IACLC,UAAU,EAAEL,QAAQ,CAAC;MAACM,IAAI,EAAE;IAAY,CAAC,CAAC,IAAI,CAAC;EACjD,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,4BAAW;MAAA,IAATC,MAAM,QAANA,MAAM;MAChB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QACtCV,aAAa,CAAC;UAACW,IAAI,EAAE;QAAM,CAAC,CAAC,CAACC,IAAI,CAAC,UAAAC,GAAG,EAAI;UACxCN,MAAM,CAAC,iBAAiB,EAAEM,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;UACxCL,OAAO,EAAE;QACX,CAAC,CAAC,CAACM,KAAK,CAAC,UAAAC,KAAK,EAAI;UAChBN,MAAM,CAACM,KAAK,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,eAAe,EAAE,yBAAChB,KAAK,EAAEY,IAAI,EAAK;MAChCZ,KAAK,CAACC,UAAU,GAAGW,IAAI,CAACK,GAAG,CAAC,UAAAC,IAAI,EAAI;QAClC,OAAO;UACLC,QAAQ,YAAKD,IAAI,CAACT,IAAI,cAAIS,IAAI,CAACE,OAAO,CAAE;UACxCC,UAAU,EAAEH,IAAI,CAACI;QACnB,CAAC;MACH,CAAC,CAAC;MACFzB,QAAQ,CAAC;QAACK,IAAI,EAAE,YAAY;QAAEqB,OAAO,EAAEvB,KAAK,CAACC;MAAU,CAAC,CAAC;IAC3D;EACF;AAEF,CAAC;AAED,eAAeF,IAAI"}]}