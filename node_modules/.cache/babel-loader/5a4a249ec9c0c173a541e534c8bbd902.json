{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js??ref--13-0!/Users/shiliangliang/6cloud/saber/src/api/user.js","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/api/user.js","mtime":1675305945985},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js","mtime":1676864063827}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport request from '@/router/axios';\nimport website from \"@/config/website\";\nexport var loginByUsername = function loginByUsername(tenantId, deptId, roleId, username, password, type, key, code) {\n  return request({\n    url: '/api/blade-auth/oauth/token',\n    method: 'post',\n    headers: {\n      'Tenant-Id': tenantId,\n      'Dept-Id': website.switchMode ? deptId : '',\n      'Role-Id': website.switchMode ? roleId : '',\n      'Captcha-Key': key,\n      'Captcha-Code': code\n    },\n    params: {\n      tenantId: tenantId,\n      username: username,\n      password: password,\n      grant_type: website.captchaMode ? \"captcha\" : \"password\",\n      scope: \"all\",\n      type: type\n    }\n  });\n};\nexport var loginBySocial = function loginBySocial(tenantId, source, code, state) {\n  return request({\n    url: '/api/blade-auth/oauth/token',\n    method: 'post',\n    headers: {\n      'Tenant-Id': tenantId\n    },\n    params: {\n      tenantId: tenantId,\n      source: source,\n      code: code,\n      state: state,\n      grant_type: \"social\",\n      scope: \"all\"\n    }\n  });\n};\nexport var refreshToken = function refreshToken(refresh_token, tenantId, deptId, roleId) {\n  return request({\n    url: '/api/blade-auth/oauth/token',\n    method: 'post',\n    headers: {\n      'Tenant-Id': tenantId,\n      'Dept-Id': website.switchMode ? deptId : '',\n      'Role-Id': website.switchMode ? roleId : ''\n    },\n    params: {\n      tenantId: tenantId,\n      refresh_token: refresh_token,\n      grant_type: \"refresh_token\",\n      scope: \"all\"\n    }\n  });\n};\nexport var registerGuest = function registerGuest(form, oauthId) {\n  return request({\n    url: '/api/blade-user/register-guest',\n    method: 'post',\n    params: {\n      tenantId: form.tenantId,\n      name: form.name,\n      account: form.account,\n      password: form.password,\n      oauthId: oauthId\n    }\n  });\n};\nexport var getButtons = function getButtons() {\n  return request({\n    url: '/api/blade-system/menu/buttons',\n    method: 'get'\n  });\n};\nexport var getCaptcha = function getCaptcha() {\n  return request({\n    url: '/api/blade-auth/oauth/captcha',\n    method: 'get'\n  });\n};\nexport var logout = function logout() {\n  return request({\n    url: '/api/blade-auth/oauth/logout',\n    method: 'get'\n  });\n};\nexport var getUserInfo = function getUserInfo() {\n  return request({\n    url: '/api/blade-auth/oauth/user-info',\n    method: 'get'\n  });\n};\nexport var sendLogs = function sendLogs(list) {\n  return request({\n    url: '/api/blade-auth/oauth/logout',\n    method: 'post',\n    data: list\n  });\n};\nexport var clearCache = function clearCache() {\n  return request({\n    url: '/api/blade-auth/oauth/clear-cache',\n    method: 'get'\n  });\n};",{"version":3,"names":["request","website","loginByUsername","tenantId","deptId","roleId","username","password","type","key","code","url","method","headers","switchMode","params","grant_type","captchaMode","scope","loginBySocial","source","state","refreshToken","refresh_token","registerGuest","form","oauthId","name","account","getButtons","getCaptcha","logout","getUserInfo","sendLogs","list","data","clearCache"],"sources":["/Users/shiliangliang/6cloud/saber/src/api/user.js"],"sourcesContent":["import request from '@/router/axios';\r\nimport website from \"@/config/website\";\r\n\r\nexport const loginByUsername = (tenantId, deptId, roleId, username, password, type, key, code) => request({\r\n  url: '/api/blade-auth/oauth/token',\r\n  method: 'post',\r\n  headers: {\r\n    'Tenant-Id': tenantId,\r\n    'Dept-Id': (website.switchMode ? deptId : ''),\r\n    'Role-Id': (website.switchMode ? roleId : ''),\r\n    'Captcha-Key': key,\r\n    'Captcha-Code': code,\r\n  },\r\n  params: {\r\n    tenantId,\r\n    username,\r\n    password,\r\n    grant_type: (website.captchaMode ? \"captcha\" : \"password\"),\r\n    scope: \"all\",\r\n    type\r\n  }\r\n});\r\n\r\nexport const loginBySocial = (tenantId, source, code, state) => request({\r\n  url: '/api/blade-auth/oauth/token',\r\n  method: 'post',\r\n  headers: {\r\n    'Tenant-Id': tenantId\r\n  },\r\n  params: {\r\n    tenantId,\r\n    source,\r\n    code,\r\n    state,\r\n    grant_type: \"social\",\r\n    scope: \"all\",\r\n  }\r\n})\r\n\r\nexport const refreshToken = (refresh_token, tenantId, deptId, roleId) => request({\r\n  url: '/api/blade-auth/oauth/token',\r\n  method: 'post',\r\n  headers: {\r\n    'Tenant-Id': tenantId,\r\n    'Dept-Id': (website.switchMode ? deptId : ''),\r\n    'Role-Id': (website.switchMode ? roleId : '')\r\n  },\r\n  params: {\r\n    tenantId,\r\n    refresh_token,\r\n    grant_type: \"refresh_token\",\r\n    scope: \"all\",\r\n  }\r\n});\r\n\r\nexport const registerGuest = (form, oauthId) => request({\r\n  url: '/api/blade-user/register-guest',\r\n  method: 'post',\r\n  params: {\r\n    tenantId: form.tenantId,\r\n    name: form.name,\r\n    account: form.account,\r\n    password: form.password,\r\n    oauthId\r\n  }\r\n});\r\n\r\nexport const getButtons = () => request({\r\n  url: '/api/blade-system/menu/buttons',\r\n  method: 'get'\r\n});\r\n\r\nexport const getCaptcha = () => request({\r\n  url: '/api/blade-auth/oauth/captcha',\r\n  method: 'get'\r\n});\r\n\r\nexport const logout = () => request({\r\n  url: '/api/blade-auth/oauth/logout',\r\n  method: 'get'\r\n});\r\n\r\nexport const getUserInfo = () => request({\r\n  url: '/api/blade-auth/oauth/user-info',\r\n  method: 'get'\r\n});\r\n\r\nexport const sendLogs = (list) => request({\r\n  url: '/api/blade-auth/oauth/logout',\r\n  method: 'post',\r\n  data: list\r\n});\r\n\r\nexport const clearCache = () => request({\r\n  url: '/api/blade-auth/oauth/clear-cache',\r\n  method: 'get'\r\n});\r\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,gBAAgB;AACpC,OAAOC,OAAO,MAAM,kBAAkB;AAEtC,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI;EAAA,OAAKV,OAAO,CAAC;IACxGW,GAAG,EAAE,6BAA6B;IAClCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,WAAW,EAAEV,QAAQ;MACrB,SAAS,EAAGF,OAAO,CAACa,UAAU,GAAGV,MAAM,GAAG,EAAG;MAC7C,SAAS,EAAGH,OAAO,CAACa,UAAU,GAAGT,MAAM,GAAG,EAAG;MAC7C,aAAa,EAAEI,GAAG;MAClB,cAAc,EAAEC;IAClB,CAAC;IACDK,MAAM,EAAE;MACNZ,QAAQ,EAARA,QAAQ;MACRG,QAAQ,EAARA,QAAQ;MACRC,QAAQ,EAARA,QAAQ;MACRS,UAAU,EAAGf,OAAO,CAACgB,WAAW,GAAG,SAAS,GAAG,UAAW;MAC1DC,KAAK,EAAE,KAAK;MACZV,IAAI,EAAJA;IACF;EACF,CAAC,CAAC;AAAA;AAEF,OAAO,IAAMW,aAAa,GAAG,SAAhBA,aAAa,CAAIhB,QAAQ,EAAEiB,MAAM,EAAEV,IAAI,EAAEW,KAAK;EAAA,OAAKrB,OAAO,CAAC;IACtEW,GAAG,EAAE,6BAA6B;IAClCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,WAAW,EAAEV;IACf,CAAC;IACDY,MAAM,EAAE;MACNZ,QAAQ,EAARA,QAAQ;MACRiB,MAAM,EAANA,MAAM;MACNV,IAAI,EAAJA,IAAI;MACJW,KAAK,EAALA,KAAK;MACLL,UAAU,EAAE,QAAQ;MACpBE,KAAK,EAAE;IACT;EACF,CAAC,CAAC;AAAA;AAEF,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAY,CAAIC,aAAa,EAAEpB,QAAQ,EAAEC,MAAM,EAAEC,MAAM;EAAA,OAAKL,OAAO,CAAC;IAC/EW,GAAG,EAAE,6BAA6B;IAClCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,WAAW,EAAEV,QAAQ;MACrB,SAAS,EAAGF,OAAO,CAACa,UAAU,GAAGV,MAAM,GAAG,EAAG;MAC7C,SAAS,EAAGH,OAAO,CAACa,UAAU,GAAGT,MAAM,GAAG;IAC5C,CAAC;IACDU,MAAM,EAAE;MACNZ,QAAQ,EAARA,QAAQ;MACRoB,aAAa,EAAbA,aAAa;MACbP,UAAU,EAAE,eAAe;MAC3BE,KAAK,EAAE;IACT;EACF,CAAC,CAAC;AAAA;AAEF,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAa,CAAIC,IAAI,EAAEC,OAAO;EAAA,OAAK1B,OAAO,CAAC;IACtDW,GAAG,EAAE,gCAAgC;IACrCC,MAAM,EAAE,MAAM;IACdG,MAAM,EAAE;MACNZ,QAAQ,EAAEsB,IAAI,CAACtB,QAAQ;MACvBwB,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,OAAO,EAAEH,IAAI,CAACG,OAAO;MACrBrB,QAAQ,EAAEkB,IAAI,CAAClB,QAAQ;MACvBmB,OAAO,EAAPA;IACF;EACF,CAAC,CAAC;AAAA;AAEF,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAU;EAAA,OAAS7B,OAAO,CAAC;IACtCW,GAAG,EAAE,gCAAgC;IACrCC,MAAM,EAAE;EACV,CAAC,CAAC;AAAA;AAEF,OAAO,IAAMkB,UAAU,GAAG,SAAbA,UAAU;EAAA,OAAS9B,OAAO,CAAC;IACtCW,GAAG,EAAE,+BAA+B;IACpCC,MAAM,EAAE;EACV,CAAC,CAAC;AAAA;AAEF,OAAO,IAAMmB,MAAM,GAAG,SAATA,MAAM;EAAA,OAAS/B,OAAO,CAAC;IAClCW,GAAG,EAAE,8BAA8B;IACnCC,MAAM,EAAE;EACV,CAAC,CAAC;AAAA;AAEF,OAAO,IAAMoB,WAAW,GAAG,SAAdA,WAAW;EAAA,OAAShC,OAAO,CAAC;IACvCW,GAAG,EAAE,iCAAiC;IACtCC,MAAM,EAAE;EACV,CAAC,CAAC;AAAA;AAEF,OAAO,IAAMqB,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,IAAI;EAAA,OAAKlC,OAAO,CAAC;IACxCW,GAAG,EAAE,8BAA8B;IACnCC,MAAM,EAAE,MAAM;IACduB,IAAI,EAAED;EACR,CAAC,CAAC;AAAA;AAEF,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAU;EAAA,OAASpC,OAAO,CAAC;IACtCW,GAAG,EAAE,mCAAmC;IACxCC,MAAM,EAAE;EACV,CAAC,CAAC;AAAA"}]}