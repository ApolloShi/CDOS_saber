{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/views/resource/attach.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/views/resource/attach.vue","mtime":1675244276642},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.string.link\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/shiliangliang/6cloud/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { getList, getDetail, remove } from \"@/api/resource/attach\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      attachBox: false,\n      selectionList: [],\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogClickModal: false,\n        column: [{\n          label: \"附件地址\",\n          prop: \"link\",\n          rules: [{\n            required: true,\n            message: \"请输入附件地址\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"附件域名\",\n          prop: \"domain\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入附件域名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"附件名称\",\n          prop: \"name\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入附件名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"附件原名\",\n          prop: \"originalName\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入附件原名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"附件拓展名\",\n          prop: \"extension\",\n          rules: [{\n            required: true,\n            message: \"请输入附件拓展名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"附件大小\",\n          prop: \"attachSize\",\n          slot: true,\n          rules: [{\n            required: true,\n            message: \"请输入附件大小\",\n            trigger: \"blur\"\n          }]\n        }]\n      },\n      data: [],\n      attachForm: {},\n      attachOption: {\n        submitBtn: false,\n        emptyBtn: false,\n        column: [{\n          label: '附件上传',\n          prop: 'attachFile',\n          type: 'upload',\n          drag: true,\n          loadText: '模板上传中，请稍等',\n          span: 24,\n          propsHttp: {\n            res: 'data'\n          },\n          action: \"/api/blade-resource/oss/endpoint/put-file-attach\"\n        }]\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: false,\n        editBtn: false,\n        viewBtn: false,\n        delBtn: this.vaildData(this.permission.attach_delete, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    handleUpload: function handleUpload() {\n      this.attachBox = true;\n    },\n    uploadAfter: function uploadAfter(res, done, loading, column) {\n      window.console.log(column);\n      this.attachBox = false;\n      this.refreshChange();\n      done();\n    },\n    handleDownload: function handleDownload(row) {\n      window.open(\"\".concat(row.link));\n    },\n    rowDel: function rowDel(row) {\n      var _this = this;\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this.onLoad(_this.page);\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this2 = this;\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this2.ids);\n      }).then(function () {\n        _this2.onLoad(_this2.page);\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this2.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this3 = this;\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          _this3.form = res.data.data;\n        });\n      }\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this4 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this4.page.total = data.total;\n        _this4.data = data.records;\n        _this4.loading = false;\n        _this4.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;AA0DA;AACA;AAEA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC,SACA;UACAC;UACAC;UACAC;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAL;UACAC;UACAK;UACAJ;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAL;UACAC;UACAK;UACAJ;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAL;UACAC;UACAK;UACAJ;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAL;UACAC;UACAC;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAL;UACAC;UACAM;UACAL;YACAC;YACAC;YACAC;UACA;QACA;MAEA;MACA3B;MACA8B;MACAC;QACAC;QACAC;QACAZ,SACA;UACAC;UACAC;UACAW;UACAC;UACAC;UACAC;UACAC;YACAC;UACA;UACAC;QACA;MAEA;IACA;EACA;EACAC,0CACAC;IACAC;MACA;QACAC;QACAC;QACA3B;QACA4B;MACA;IACA;IACAC;MACA;MACA;QACAA;MACA;MACA;IACA;EAAA,EACA;EACAC;IACAC;MACA;IACA;IACAC;MACAC;MACA;MACA;MACAC;IACA;IACAC;MACAF;IACA;IACAG;MAAA;MACA;QACAC;QACAC;QACAtB;MACA,GACAuB;QACA;MACA,GACAA;QACA;QACA;UACAvB;UACAR;QACA;MACA;IACA;IACAgC;MAAA;MACA;QACA;QACA;MACA;MACA;QACAH;QACAC;QACAtB;MACA,GACAuB;QACA;MACA,GACAA;QACA;QACA;UACAvB;UACAR;QACA;QACA;MACA;IACA;IACAiC;MAAA;MACA;QACAC;UACA;QACA;MACA;MACAR;IACA;IACAS;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACAV;IACA;IACAW;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MAAA;MACA;MACAC;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["data","form","query","loading","page","pageSize","currentPage","total","attachBox","selectionList","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","viewBtn","selection","dialogClickModal","column","label","prop","rules","required","message","trigger","search","slot","attachForm","attachOption","submitBtn","emptyBtn","type","drag","loadText","span","propsHttp","res","action","computed","mapGetters","permissionList","addBtn","editBtn","delBtn","ids","methods","handleUpload","uploadAfter","window","done","handleDownload","rowDel","confirmButtonText","cancelButtonText","then","handleDelete","beforeOpen","getDetail","searchReset","searchChange","selectionChange","selectionClear","currentChange","sizeChange","refreshChange","onLoad","getList"],"sourceRoot":"src/views/resource","sources":["attach.vue"],"sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page.sync=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   plain\r\n                   v-if=\"permission.attach_upload\"\r\n                   icon=\"el-icon-upload2\"\r\n                   @click=\"handleUpload\">上 传\r\n        </el-button>\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.attach_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   icon=\"el-icon-download\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.attach_download\"\r\n                   @click=\"handleDownload(scope.row)\">下载\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"attachSize\">\r\n        <el-tag>{{`${row.attachSize} KB`}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <el-dialog title=\"附件管理\"\r\n               append-to-body\r\n               :visible.sync=\"attachBox\"\r\n               width=\"555px\">\r\n      <avue-form ref=\"form\" :option=\"attachOption\" v-model=\"attachForm\" :upload-after=\"uploadAfter\">\r\n      </avue-form>\r\n    </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, remove} from \"@/api/resource/attach\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        attachBox: false,\r\n        selectionList: [],\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 30,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"附件地址\",\r\n              prop: \"link\",\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入附件地址\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"附件域名\",\r\n              prop: \"domain\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入附件域名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"附件名称\",\r\n              prop: \"name\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入附件名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"附件原名\",\r\n              prop: \"originalName\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入附件原名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"附件拓展名\",\r\n              prop: \"extension\",\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入附件拓展名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"附件大小\",\r\n              prop: \"attachSize\",\r\n              slot: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入附件大小\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n          ]\r\n        },\r\n        data: [],\r\n        attachForm: {},\r\n        attachOption: {\r\n          submitBtn: false,\r\n          emptyBtn: false,\r\n          column: [\r\n            {\r\n              label: '附件上传',\r\n              prop: 'attachFile',\r\n              type: 'upload',\r\n              drag: true,\r\n              loadText: '模板上传中，请稍等',\r\n              span: 24,\r\n              propsHttp: {\r\n                res: 'data'\r\n              },\r\n              action: \"/api/blade-resource/oss/endpoint/put-file-attach\"\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: false,\r\n          editBtn: false,\r\n          viewBtn: false,\r\n          delBtn: this.vaildData(this.permission.attach_delete, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      handleUpload() {\r\n        this.attachBox = true;\r\n      },\r\n      uploadAfter(res, done, loading, column) {\r\n        window.console.log(column);\r\n        this.attachBox = false;\r\n        this.refreshChange();\r\n        done();\r\n      },\r\n      handleDownload(row) {\r\n        window.open(`${row.link}`);\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}