{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js??ref--13-0!/Users/shiliangliang/6cloud/saber/src/config/theme/index.js","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/config/theme/index.js","mtime":1675305945985},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/eslint-loader/index.js","mtime":1676864063827}],"contextDependencies":[],"result":["/*\r\n * @Author: 周楠楠\r\n * @Date: 2022-06-23 15:04:49\r\n * @LastEditors: 周楠楠\r\n * @LastEditTime: 2022-06-23 18:49:37\r\n * @Description: 主题配置 - 在需要且切换的地方使用initTheme方法进行主题的切换\r\n */\nimport { getStore } from '@/util/store';\nimport { setTheme } from '@/util/util';\nimport { theme } from \"./cssVars.js\";\nimport cssVars from 'css-vars-ponyfill';\nexport function initTheme(name) {\n  name = name || 'base';\n  document.documentElement.setAttribute('data-theme', name);\n  setTheme(\"theme-\".concat(name, \" \").concat(getStore({\n    name: 'tableThemeName'\n  }) || 'theme-table-striped'));\n  cssVars({\n    watch: true,\n    // 当添加，删除或修改其<link>或<style>元素的禁用或href属性时，ponyfill将自行调用\n    variables: theme[name + 'Theme'],\n    // variables 自定义属性名/值对的集合\n    onlyLegacy: false // false  默认将css变量编译为浏览器识别的css样式  true 当浏览器不支持css变量的时候将css变量编译为识别的css\n  });\n}",{"version":3,"names":["getStore","setTheme","theme","cssVars","initTheme","name","document","documentElement","setAttribute","watch","variables","onlyLegacy"],"sources":["/Users/shiliangliang/6cloud/saber/src/config/theme/index.js"],"sourcesContent":["/*\r\n * @Author: 周楠楠\r\n * @Date: 2022-06-23 15:04:49\r\n * @LastEditors: 周楠楠\r\n * @LastEditTime: 2022-06-23 18:49:37\r\n * @Description: 主题配置 - 在需要且切换的地方使用initTheme方法进行主题的切换\r\n */\r\nimport {\r\n  getStore\r\n} from '@/util/store'\r\nimport { setTheme } from '@/util/util'\r\nimport { theme } from './cssVars.js'\r\nimport cssVars from 'css-vars-ponyfill'\r\nexport function initTheme (name) {\r\n  name = name || 'base'\r\n  document.documentElement.setAttribute('data-theme', name)\r\n  setTheme(`theme-${name} ${getStore({ name: 'tableThemeName' }) || 'theme-table-striped'}`)\r\n  cssVars({\r\n    watch: true, // 当添加，删除或修改其<link>或<style>元素的禁用或href属性时，ponyfill将自行调用\r\n    variables: theme[name + 'Theme'], // variables 自定义属性名/值对的集合\r\n    onlyLegacy: false // false  默认将css变量编译为浏览器识别的css样式  true 当浏览器不支持css变量的时候将css变量编译为识别的css\r\n  })\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,QAAQ,QACH,cAAc;AACrB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK;AACd,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,SAASC,SAAS,CAAEC,IAAI,EAAE;EAC/BA,IAAI,GAAGA,IAAI,IAAI,MAAM;EACrBC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEH,IAAI,CAAC;EACzDJ,QAAQ,iBAAUI,IAAI,cAAIL,QAAQ,CAAC;IAAEK,IAAI,EAAE;EAAiB,CAAC,CAAC,IAAI,qBAAqB,EAAG;EAC1FF,OAAO,CAAC;IACNM,KAAK,EAAE,IAAI;IAAE;IACbC,SAAS,EAAER,KAAK,CAACG,IAAI,GAAG,OAAO,CAAC;IAAE;IAClCM,UAAU,EAAE,KAAK,CAAC;EACpB,CAAC,CAAC;AACJ"}]}