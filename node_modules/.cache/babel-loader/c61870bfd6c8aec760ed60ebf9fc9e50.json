{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js!/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/views/flow/deploy.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/views/flow/deploy.vue","mtime":1675244276627},{"path":"/Users/shiliangliang/6cloud/saber/babel.config.js","mtime":1675244276424},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["import { deployUpload } from \"@/api/flow/flow\";\nimport { flowCategory } from \"@/util/flow\";\nexport default {\n  data: function data() {\n    return {\n      form: {\n        flowCategory: '',\n        tenantId: '',\n        flowFile: [],\n        file: {}\n      },\n      option: {\n        labelWidth: 120,\n        menuBtn: false,\n        column: [{\n          label: '流程类型',\n          prop: 'flowCategory',\n          type: 'select',\n          dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          row: true,\n          span: 12,\n          dataType: \"number\",\n          rules: [{\n            required: true,\n            message: '请选择流程类型',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"流程模式\",\n          prop: \"flowMode\",\n          type: \"radio\",\n          dicData: [{\n            label: \"通用流程\",\n            value: 1\n          }, {\n            label: \"定制流程\",\n            value: 2\n          }],\n          value: 1,\n          row: true,\n          span: 12,\n          rules: [{\n            required: true,\n            message: '请选择流程模式',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          multiple: true,\n          dicUrl: \"/api/blade-system/tenant/select\",\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          display: false,\n          row: true,\n          span: 12,\n          rules: [{\n            required: true,\n            message: '请选择所属租户',\n            trigger: 'blur'\n          }]\n        }, {\n          label: '附件上传',\n          prop: 'flowFile',\n          type: 'upload',\n          loadText: '附件上传中，请稍等',\n          span: 24,\n          propsHttp: {\n            res: 'data'\n          },\n          tip: '请上传 bpmn20.xml 标准格式文件',\n          action: '/api/blade-flow/manager/check-upload'\n        }]\n      }\n    };\n  },\n  watch: {\n    'form.flowMode': function formFlowMode() {\n      var _this = this;\n      this.$refs.form.option.column.filter(function (item) {\n        if (item.prop === \"tenantId\") {\n          item.display = _this.form.flowMode === 2;\n        }\n      });\n    }\n  },\n  methods: {\n    uploadBefore: function uploadBefore(file, done) {\n      this.$message.success('部署开始');\n      this.file = file;\n      done();\n    },\n    uploadAfter: function uploadAfter(res, done, loading) {\n      var _this2 = this;\n      if (!this.form.flowCategory) {\n        this.$message.warning('清先选择流程类型');\n        loading();\n        return false;\n      }\n      if (this.form.flowMode === 2 && !this.form.tenantId) {\n        this.$message.warning('清先选择对应租户');\n        loading();\n        return false;\n      }\n      if (res.success) {\n        deployUpload(flowCategory(this.form.flowCategory), this.form.tenantId ? this.form.tenantId.join(\",\") : \"\", [this.file]).then(function (res) {\n          var data = res.data;\n          if (data.success) {\n            done();\n          } else {\n            _this2.$message.error(data.msg);\n            loading();\n          }\n        });\n      } else {\n        this.$message.warning('请上传 bpmn20.xml 标准格式文件');\n        loading();\n        return false;\n      }\n    }\n  }\n};",{"version":3,"mappings":"AAOA;AACA;AAEA;EACAA;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;QACAC,SACA;UACAC;UACAC;UACAC;UACAC;UACAC;YACAJ;YACAK;UACA;UACAC;UACAC;UACAC;UACAC,QACA;YACAC;YACAC;YACAC;UACA;QAEA,GACA;UACAZ;UACAC;UACAC;UACAW,UACA;YACAb;YACAK;UACA,GACA;YACAL;YACAK;UACA,EACA;UACAA;UACAC;UACAC;UACAE,QACA;YACAC;YACAC;YACAC;UACA;QAEA,GACA;UACAZ;UACAC;UACAC;UACAY;UACAX;UACAC;YACAJ;YACAK;UACA;UACAU;UACAT;UACAC;UACAE,QACA;YACAC;YACAC;YACAC;UACA;QAEA,GACA;UACAZ;UACAC;UACAC;UACAc;UACAT;UACAU;YACAC;UACA;UACAC;UACAC;QACA;MAEA;IACA;EACA;EACAC;IACA;MAAA;MACA;QACA;UACAC;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;MACAC;IACA;IACAC;MAAA;MACA;QACA;QACAC;QACA;MACA;MACA;QACA;QACAA;QACA;MACA;MACA;QACAC,aACApC,sCACA,wDACA,YACA;UACA;UACA;YACAiC;UACA;YACA;YACAE;UACA;QACA;MACA;QACA;QACAA;QACA;MACA;IACA;EACA;AACA","names":["data","form","flowCategory","tenantId","flowFile","file","option","labelWidth","menuBtn","column","label","prop","type","dicUrl","props","value","row","span","dataType","rules","required","message","trigger","dicData","multiple","display","loadText","propsHttp","res","tip","action","watch","item","methods","uploadBefore","done","uploadAfter","loading","deployUpload"],"sourceRoot":"src/views/flow","sources":["deploy.vue"],"sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-form ref=\"form\" :option=\"option\" v-model=\"form\" :upload-before=\"uploadBefore\" :upload-after=\"uploadAfter\"/>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {deployUpload} from \"@/api/flow/flow\";\r\n  import {flowCategory} from \"@/util/flow\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {\r\n          flowCategory: '',\r\n          tenantId: '',\r\n          flowFile: [],\r\n          file: {},\r\n        },\r\n        option: {\r\n          labelWidth: 120,\r\n          menuBtn: false,\r\n          column: [\r\n            {\r\n              label: '流程类型',\r\n              prop: 'flowCategory',\r\n              type: 'select',\r\n              dicUrl: `/api/blade-system/dict/dictionary?code=flow`,\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              row: true,\r\n              span: 12,\r\n              dataType: \"number\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择流程类型',\r\n                  trigger: 'blur'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"流程模式\",\r\n              prop: \"flowMode\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"通用流程\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"定制流程\",\r\n                  value: 2\r\n                }\r\n              ],\r\n              value: 1,\r\n              row: true,\r\n              span: 12,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择流程模式',\r\n                  trigger: 'blur'\r\n                }\r\n              ],\r\n            },\r\n            {\r\n              label: \"所属租户\",\r\n              prop: \"tenantId\",\r\n              type: \"tree\",\r\n              multiple: true,\r\n              dicUrl: \"/api/blade-system/tenant/select\",\r\n              props: {\r\n                label: \"tenantName\",\r\n                value: \"tenantId\"\r\n              },\r\n              display: false,\r\n              row: true,\r\n              span: 12,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择所属租户',\r\n                  trigger: 'blur'\r\n                }\r\n              ],\r\n            },\r\n            {\r\n              label: '附件上传',\r\n              prop: 'flowFile',\r\n              type: 'upload',\r\n              loadText: '附件上传中，请稍等',\r\n              span: 24,\r\n              propsHttp: {\r\n                res: 'data'\r\n              },\r\n              tip: '请上传 bpmn20.xml 标准格式文件',\r\n              action: '/api/blade-flow/manager/check-upload'\r\n            },\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      'form.flowMode'() {\r\n        this.$refs.form.option.column.filter(item => {\r\n          if (item.prop === \"tenantId\") {\r\n            item.display = this.form.flowMode === 2;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    methods: {\r\n      uploadBefore(file, done) {\r\n        this.$message.success('部署开始');\r\n        this.file = file;\r\n        done()\r\n      },\r\n      uploadAfter(res, done, loading) {\r\n        if (!this.form.flowCategory) {\r\n          this.$message.warning('清先选择流程类型');\r\n          loading()\r\n          return false;\r\n        }\r\n        if (this.form.flowMode === 2 && !this.form.tenantId) {\r\n          this.$message.warning('清先选择对应租户');\r\n          loading();\r\n          return false;\r\n        }\r\n        if (res.success) {\r\n          deployUpload(\r\n            flowCategory(this.form.flowCategory),\r\n            (this.form.tenantId) ? this.form.tenantId.join(\",\") : \"\",\r\n            [this.file]\r\n          ).then(res => {\r\n            const data = res.data;\r\n            if (data.success) {\r\n              done()\r\n            } else {\r\n              this.$message.error(data.msg);\r\n              loading()\r\n            }\r\n          })\r\n        } else {\r\n          this.$message.warning('请上传 bpmn20.xml 标准格式文件');\r\n          loading()\r\n          return false;\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n"]}]}