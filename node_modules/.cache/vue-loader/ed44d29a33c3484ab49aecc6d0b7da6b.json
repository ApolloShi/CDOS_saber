{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/views/util/demo/dict-classic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/views/util/demo/dict-classic.vue","mtime":1675244276658},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["\r\n  import {\r\n    getList,\r\n    remove,\r\n    update,\r\n    add,\r\n    getDict,\r\n    getDictTree\r\n  } from \"@/api/system/dict\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        option: {\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          tree: true,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: true,\r\n          menuWidth: 300,\r\n          dialogWidth: 880,\r\n          column: [\r\n            {\r\n              label: \"字典编号\",\r\n              prop: \"code\",\r\n              search: true,\r\n              span: 24,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典编号\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典名称\",\r\n              prop: \"dictValue\",\r\n              search: true,\r\n              align: \"center\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典名称\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"上级字典\",\r\n              prop: \"parentId\",\r\n              type: \"tree\",\r\n              dicData: [],\r\n              hide: true,\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              rules: [\r\n                {\r\n                  required: false,\r\n                  message: \"请选择上级字典\",\r\n                  trigger: \"click\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典键值\",\r\n              prop: \"dictKey\",\r\n              type: \"number\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典键值\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典排序\",\r\n              prop: \"sort\",\r\n              type: \"number\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典排序\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"封存\",\r\n              prop: \"isSealed\",\r\n              type: \"select\",\r\n              dicData: [\r\n                {\r\n                  label: \"否\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"是\",\r\n                  value: 1\r\n                }\r\n              ],\r\n              slot: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择封存\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典备注\",\r\n              prop: \"remark\",\r\n              search: true,\r\n              hide: true\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.dict_add, false),\r\n          viewBtn: this.vaildData(this.permission.dict_view, false),\r\n          delBtn: this.vaildData(this.permission.dict_delete, false),\r\n          editBtn: this.vaildData(this.permission.dict_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    mounted() {\r\n      getDictTree().then(res => {\r\n        const column = this.findObject(this.optionChild.column, \"parentId\");\r\n        column.dicData = res.data.data;\r\n      });\r\n    },\r\n    methods: {\r\n      handleAdd(row) {\r\n        this.$refs.crud.value.code = row.code;\r\n        this.$refs.crud.value.parentId = row.id;\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"code\") {\r\n            item.value = row.code;\r\n            item.addDisabled = true;\r\n          }\r\n          if (item.prop === \"parentId\") {\r\n            item.value = row.id;\r\n            item.addDisabled = true;\r\n          }\r\n        });\r\n        this.$refs.crud.rowAdd();\r\n      },\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDict(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      beforeClose(done) {\r\n        this.$refs.crud.tableForm = {};\r\n        this.$refs.crud.value.code = \"\";\r\n        this.$refs.crud.value.parentId = \"\";\r\n        this.$refs.crud.value.addDisabled = false;\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"code\") {\r\n            item.value = \"\";\r\n            item.addDisabled = false;\r\n          }\r\n          if (item.prop === \"parentId\") {\r\n            item.value = \"\";\r\n            item.addDisabled = false;\r\n          }\r\n        });\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(\r\n          page.currentPage,\r\n          page.pageSize,\r\n          Object.assign(params, this.query)\r\n        ).then(res => {\r\n          this.data = res.data.data;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n",{"version":3,"sources":["dict-classic.vue"],"names":[],"mappings":";AAkfile":"dict-classic.vue","sourceRoot":"src/views/util/demo","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud\r\n      :option=\"option\"\r\n      :table-loading=\"loading\"\r\n      :data=\"data\"\r\n      ref=\"crud\"\r\n      v-model=\"form\"\r\n      :permission=\"permissionList\"\r\n      :before-open=\"beforeOpen\"\r\n      :before-close=\"beforeClose\"\r\n      @row-del=\"rowDel\"\r\n      @row-update=\"rowUpdate\"\r\n      @row-save=\"rowSave\"\r\n      @search-change=\"searchChange\"\r\n      @search-reset=\"searchReset\"\r\n      @selection-change=\"selectionChange\"\r\n      @current-change=\"currentChange\"\r\n      @size-change=\"sizeChange\"\r\n      @refresh-change=\"refreshChange\"\r\n      @on-load=\"onLoad\"\r\n    >\r\n      <template slot=\"menuLeft\">\r\n        <el-button\r\n          type=\"danger\"\r\n          size=\"small\"\r\n          icon=\"el-icon-delete\"\r\n          v-if=\"permission.dict_delete\"\r\n          plain\r\n          @click=\"handleDelete\"\r\n        >删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"isSealed\">\r\n        <el-tag>{{row.isSealed===0?'否':'是'}}</el-tag>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button\r\n          type=\"text\"\r\n          icon=\"el-icon-check\"\r\n          size=\"small\"\r\n          @click.stop=\"handleAdd(scope.row,scope.index)\"\r\n        >新增子项\r\n        </el-button>\r\n      </template>\r\n    </avue-crud>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getList,\r\n    remove,\r\n    update,\r\n    add,\r\n    getDict,\r\n    getDictTree\r\n  } from \"@/api/system/dict\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        option: {\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          tree: true,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: true,\r\n          menuWidth: 300,\r\n          dialogWidth: 880,\r\n          column: [\r\n            {\r\n              label: \"字典编号\",\r\n              prop: \"code\",\r\n              search: true,\r\n              span: 24,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典编号\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典名称\",\r\n              prop: \"dictValue\",\r\n              search: true,\r\n              align: \"center\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典名称\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"上级字典\",\r\n              prop: \"parentId\",\r\n              type: \"tree\",\r\n              dicData: [],\r\n              hide: true,\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              rules: [\r\n                {\r\n                  required: false,\r\n                  message: \"请选择上级字典\",\r\n                  trigger: \"click\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典键值\",\r\n              prop: \"dictKey\",\r\n              type: \"number\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典键值\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典排序\",\r\n              prop: \"sort\",\r\n              type: \"number\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典排序\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"封存\",\r\n              prop: \"isSealed\",\r\n              type: \"select\",\r\n              dicData: [\r\n                {\r\n                  label: \"否\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"是\",\r\n                  value: 1\r\n                }\r\n              ],\r\n              slot: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择封存\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典备注\",\r\n              prop: \"remark\",\r\n              search: true,\r\n              hide: true\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.dict_add, false),\r\n          viewBtn: this.vaildData(this.permission.dict_view, false),\r\n          delBtn: this.vaildData(this.permission.dict_delete, false),\r\n          editBtn: this.vaildData(this.permission.dict_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    mounted() {\r\n      getDictTree().then(res => {\r\n        const column = this.findObject(this.optionChild.column, \"parentId\");\r\n        column.dicData = res.data.data;\r\n      });\r\n    },\r\n    methods: {\r\n      handleAdd(row) {\r\n        this.$refs.crud.value.code = row.code;\r\n        this.$refs.crud.value.parentId = row.id;\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"code\") {\r\n            item.value = row.code;\r\n            item.addDisabled = true;\r\n          }\r\n          if (item.prop === \"parentId\") {\r\n            item.value = row.id;\r\n            item.addDisabled = true;\r\n          }\r\n        });\r\n        this.$refs.crud.rowAdd();\r\n      },\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDict(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      beforeClose(done) {\r\n        this.$refs.crud.tableForm = {};\r\n        this.$refs.crud.value.code = \"\";\r\n        this.$refs.crud.value.parentId = \"\";\r\n        this.$refs.crud.value.addDisabled = false;\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"code\") {\r\n            item.value = \"\";\r\n            item.addDisabled = false;\r\n          }\r\n          if (item.prop === \"parentId\") {\r\n            item.value = \"\";\r\n            item.addDisabled = false;\r\n          }\r\n        });\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(\r\n          page.currentPage,\r\n          page.pageSize,\r\n          Object.assign(params, this.query)\r\n        ).then(res => {\r\n          this.data = res.data.data;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}