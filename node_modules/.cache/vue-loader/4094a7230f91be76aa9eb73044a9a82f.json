{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/page/index/top/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/page/index/top/index.vue","mtime":1675305945985},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["\r\n  import {initTheme} from '@/config/theme/index'\r\n  import {resetRouter} from '@/router/router'\r\n  import {mapGetters, mapState} from \"vuex\";\r\n  import {fullscreenToggel, listenfullscreen} from \"@/util/util\";\r\n  import topLock from \"./top-lock\";\r\n  import topMenu from \"./top-menu\";\r\n  import topSearch from \"./top-search\";\r\n  import topTheme from \"./top-theme\";\r\n  import topLogs from \"./top-logs\";\r\n  import topColor from \"./top-color\";\r\n  import topNotice from './top-notice'\r\n  import topLang from \"./top-lang\";\r\n\r\n  export default {\r\n    components: {\r\n      topLock,\r\n      topMenu,\r\n      topSearch,\r\n      topTheme,\r\n      topLogs,\r\n      topColor,\r\n      topNotice,\r\n      topLang\r\n    },\r\n    name: \"top\",\r\n    data() {\r\n      return {\r\n        userBox: false,\r\n        userForm: {\r\n          deptId: '',\r\n          roleId: ''\r\n        },\r\n        userOption: {\r\n          labelWidth: 70,\r\n          submitBtn: true,\r\n          emptyBtn: false,\r\n          submitText: '切换',\r\n          column: [\r\n            {\r\n              label: '部门',\r\n              prop: 'deptId',\r\n              type: 'select',\r\n              props: {\r\n                label: 'deptName',\r\n                value: 'id'\r\n              },\r\n              dicUrl: '/api/blade-system/dept/select',\r\n              span: 24,\r\n              display: false,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择部门\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: '角色',\r\n              prop: 'roleId',\r\n              type: 'select',\r\n              props: {\r\n                label: 'roleName',\r\n                value: 'id'\r\n              },\r\n              dicUrl: '/api/blade-system/role/select',\r\n              span: 24,\r\n              display: false,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择角色\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    filters: {},\r\n    created() {\r\n    },\r\n    mounted() {\r\n      listenfullscreen(this.setScreen);\r\n       this.$nextTick(() => {\r\n        initTheme('base')\r\n      })\r\n    },\r\n    computed: {\r\n      ...mapState({\r\n        showDebug: state => state.common.showDebug,\r\n        showTheme: state => state.common.showTheme,\r\n        showLock: state => state.common.showLock,\r\n        showFullScren: state => state.common.showFullScren,\r\n        showCollapse: state => state.common.showCollapse,\r\n        showSearch: state => state.common.showSearch,\r\n        showMenu: state => state.common.showMenu,\r\n        showColor: state => state.common.showColor\r\n      }),\r\n      ...mapGetters([\r\n        \"userInfo\",\r\n        \"isFullScren\",\r\n        \"tagWel\",\r\n        \"tagList\",\r\n        \"isCollapse\",\r\n        \"tag\",\r\n        \"logsLen\",\r\n        \"logsFlag\"\r\n      ])\r\n    },\r\n    methods: {\r\n      handleScreen() {\r\n        fullscreenToggel();\r\n      },\r\n      setCollapse() {\r\n        this.$store.commit(\"SET_COLLAPSE\");\r\n      },\r\n      setScreen() {\r\n        this.$store.commit(\"SET_FULLSCREN\");\r\n      },\r\n      switchDept() {\r\n        const userId = this.userInfo.user_id;\r\n        const deptColumn = this.findObject(this.userOption.column, \"deptId\");\r\n        deptColumn.dicUrl = `/api/blade-system/dept/select?userId=${userId}`;\r\n        deptColumn.display = true;\r\n        const roleColumn = this.findObject(this.userOption.column, \"roleId\");\r\n        roleColumn.dicUrl = `/api/blade-system/role/select?userId=${userId}`;\r\n        roleColumn.display = true;\r\n        this.userBox = true;\r\n      },\r\n      submitSwitch (form, done) {\r\n        this.$store.dispatch(\"refreshToken\", form).then(() => {\r\n          this.userBox = false;\r\n        })\r\n        done();\r\n      },\r\n      logout() {\r\n        this.$confirm(this.$t(\"logoutTip\"), this.$t(\"tip\"), {\r\n          confirmButtonText: this.$t(\"submitText\"),\r\n          cancelButtonText: this.$t(\"cancelText\"),\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          this.$store.dispatch(\"LogOut\").then(() => {\r\n            resetRouter();\r\n            this.$router.push({path: \"/login\"});\r\n          });\r\n        });\r\n      }\r\n    }\r\n  };\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/page/index/top","sourcesContent":["<template>\r\n  <div class=\"avue-top\">\r\n    <div class=\"top-bar__left\">\r\n      <div class=\"avue-breadcrumb\"\r\n           :class=\"[{ 'avue-breadcrumb--active': isCollapse }]\"\r\n           v-if=\"showCollapse\">\r\n        <i class=\"icon-navicon\"\r\n           @click=\"setCollapse\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"top-bar__title\">\r\n      <div class=\"top-bar__item top-bar__item--show\"\r\n           v-if=\"showMenu\">\r\n        <top-menu ref=\"topMenu\"></top-menu>\r\n      </div>\r\n      <span class=\"top-bar__item\"\r\n            v-if=\"showSearch\">\r\n        <top-search></top-search>\r\n      </span>\r\n    </div>\r\n    <div class=\"top-bar__right\">\r\n      <el-tooltip v-if=\"showColor\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.color')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <top-color></top-color>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showDebug\"\r\n                  effect=\"dark\"\r\n                  :content=\"logsFlag?$t('navbar.bug'):logsLen+$t('navbar.bugs')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <top-logs></top-logs>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showLock\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.lock')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <top-lock></top-lock>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showTheme\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.theme')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item top-bar__item--show\">\r\n          <top-theme></top-theme>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip effect=\"dark\"\r\n                  :content=\"$t('navbar.notice')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item top-bar__item--show\">\r\n          <top-notice></top-notice>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip effect=\"dark\"\r\n                  :content=\"$t('navbar.language')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item top-bar__item--show\">\r\n          <top-lang></top-lang>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showFullScren\"\r\n                  effect=\"dark\"\r\n                  :content=\"isFullScren?$t('navbar.screenfullF'):$t('navbar.screenfull')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <i :class=\"isFullScren?'icon-tuichuquanping':'icon-quanping'\"\r\n             @click=\"handleScreen\"></i>\r\n        </div>\r\n      </el-tooltip>\r\n      <img class=\"top-bar__img\"\r\n           :src=\"userInfo.avatar\">\r\n      <el-dropdown>\r\n        <span class=\"el-dropdown-link\">\r\n          {{userInfo.userName}}\r\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n        </span>\r\n        <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item>\r\n            <router-link to=\"/\">{{$t('navbar.dashboard')}}</router-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item>\r\n            <router-link to=\"/info/index\">{{$t('navbar.userinfo')}}</router-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item v-if=\"this.website.switchMode\" @click.native=\"switchDept\"\r\n                            >{{$t('navbar.switchDept')}}\r\n          </el-dropdown-item>\r\n          <el-dropdown-item @click.native=\"logout\"\r\n                            divided>{{$t('navbar.logOut')}}\r\n          </el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n      <el-dialog title=\"用户信息选择\"\r\n                 append-to-body\r\n                 :visible.sync=\"userBox\"\r\n                 width=\"350px\">\r\n        <avue-form ref=\"form\" :option=\"userOption\" v-model=\"userForm\" @submit=\"submitSwitch\"/>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {initTheme} from '@/config/theme/index'\r\n  import {resetRouter} from '@/router/router'\r\n  import {mapGetters, mapState} from \"vuex\";\r\n  import {fullscreenToggel, listenfullscreen} from \"@/util/util\";\r\n  import topLock from \"./top-lock\";\r\n  import topMenu from \"./top-menu\";\r\n  import topSearch from \"./top-search\";\r\n  import topTheme from \"./top-theme\";\r\n  import topLogs from \"./top-logs\";\r\n  import topColor from \"./top-color\";\r\n  import topNotice from './top-notice'\r\n  import topLang from \"./top-lang\";\r\n\r\n  export default {\r\n    components: {\r\n      topLock,\r\n      topMenu,\r\n      topSearch,\r\n      topTheme,\r\n      topLogs,\r\n      topColor,\r\n      topNotice,\r\n      topLang\r\n    },\r\n    name: \"top\",\r\n    data() {\r\n      return {\r\n        userBox: false,\r\n        userForm: {\r\n          deptId: '',\r\n          roleId: ''\r\n        },\r\n        userOption: {\r\n          labelWidth: 70,\r\n          submitBtn: true,\r\n          emptyBtn: false,\r\n          submitText: '切换',\r\n          column: [\r\n            {\r\n              label: '部门',\r\n              prop: 'deptId',\r\n              type: 'select',\r\n              props: {\r\n                label: 'deptName',\r\n                value: 'id'\r\n              },\r\n              dicUrl: '/api/blade-system/dept/select',\r\n              span: 24,\r\n              display: false,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择部门\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: '角色',\r\n              prop: 'roleId',\r\n              type: 'select',\r\n              props: {\r\n                label: 'roleName',\r\n                value: 'id'\r\n              },\r\n              dicUrl: '/api/blade-system/role/select',\r\n              span: 24,\r\n              display: false,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择角色\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    filters: {},\r\n    created() {\r\n    },\r\n    mounted() {\r\n      listenfullscreen(this.setScreen);\r\n       this.$nextTick(() => {\r\n        initTheme('base')\r\n      })\r\n    },\r\n    computed: {\r\n      ...mapState({\r\n        showDebug: state => state.common.showDebug,\r\n        showTheme: state => state.common.showTheme,\r\n        showLock: state => state.common.showLock,\r\n        showFullScren: state => state.common.showFullScren,\r\n        showCollapse: state => state.common.showCollapse,\r\n        showSearch: state => state.common.showSearch,\r\n        showMenu: state => state.common.showMenu,\r\n        showColor: state => state.common.showColor\r\n      }),\r\n      ...mapGetters([\r\n        \"userInfo\",\r\n        \"isFullScren\",\r\n        \"tagWel\",\r\n        \"tagList\",\r\n        \"isCollapse\",\r\n        \"tag\",\r\n        \"logsLen\",\r\n        \"logsFlag\"\r\n      ])\r\n    },\r\n    methods: {\r\n      handleScreen() {\r\n        fullscreenToggel();\r\n      },\r\n      setCollapse() {\r\n        this.$store.commit(\"SET_COLLAPSE\");\r\n      },\r\n      setScreen() {\r\n        this.$store.commit(\"SET_FULLSCREN\");\r\n      },\r\n      switchDept() {\r\n        const userId = this.userInfo.user_id;\r\n        const deptColumn = this.findObject(this.userOption.column, \"deptId\");\r\n        deptColumn.dicUrl = `/api/blade-system/dept/select?userId=${userId}`;\r\n        deptColumn.display = true;\r\n        const roleColumn = this.findObject(this.userOption.column, \"roleId\");\r\n        roleColumn.dicUrl = `/api/blade-system/role/select?userId=${userId}`;\r\n        roleColumn.display = true;\r\n        this.userBox = true;\r\n      },\r\n      submitSwitch (form, done) {\r\n        this.$store.dispatch(\"refreshToken\", form).then(() => {\r\n          this.userBox = false;\r\n        })\r\n        done();\r\n      },\r\n      logout() {\r\n        this.$confirm(this.$t(\"logoutTip\"), this.$t(\"tip\"), {\r\n          confirmButtonText: this.$t(\"submitText\"),\r\n          cancelButtonText: this.$t(\"cancelText\"),\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          this.$store.dispatch(\"LogOut\").then(() => {\r\n            resetRouter();\r\n            this.$router.push({path: \"/login\"});\r\n          });\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"]}]}