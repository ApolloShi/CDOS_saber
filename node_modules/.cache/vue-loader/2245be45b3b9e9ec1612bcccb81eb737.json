{"remainingRequest":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shiliangliang/6cloud/saber/src/views/resource/sms.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shiliangliang/6cloud/saber/src/views/resource/sms.vue","mtime":1675244276642},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/babel-loader/lib/index.js","mtime":1676864056051},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/cache-loader/dist/cjs.js","mtime":1676864065065},{"path":"/Users/shiliangliang/6cloud/saber/node_modules/vue-loader/lib/index.js","mtime":1676864065555}],"contextDependencies":[],"result":["\r\n  import {getList, getDetail, add, update, remove, enable, send} from \"@/api/resource/sms\";\r\n  import {mapGetters} from \"vuex\";\r\n  import func from \"@/util/func\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        box: false,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 30,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          menuWidth: 300,\r\n          labelWidth: 100,\r\n          dialogWidth: 880,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"分类\",\r\n              type: \"radio\",\r\n              value: 1,\r\n              span: 24,\r\n              width: 100,\r\n              searchLabelWidth: 50,\r\n              row: true,\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=sms\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              slot: true,\r\n              prop: \"category\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择分类\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"资源编号\",\r\n              prop: \"smsCode\",\r\n              span: 24,\r\n              width: 200,\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入资源编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"模版ID\",\r\n              prop: \"templateId\",\r\n              span: 24,\r\n              width: 200,\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入模版ID\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"accessKey\",\r\n              prop: \"accessKey\",\r\n              span: 24,\r\n              overHidden: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入accessKey\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: \"secretKey\",\r\n              prop: \"secretKey\",\r\n              span: 24,\r\n              overHidden: true,\r\n              display: true,\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入secretKey\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: \"regionId\",\r\n              prop: \"regionId\",\r\n              span: 24,\r\n              value: \"cn-hangzhou\",\r\n              hide: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"短信签名\",\r\n              prop: \"signName\",\r\n              span: 24,\r\n              width: 200,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入短信签名\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: \"是否启用\",\r\n              prop: \"status\",\r\n              span: 24,\r\n              width: 80,\r\n              align: \"center\",\r\n              slot: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"remark\",\r\n              span: 24,\r\n              hide: true\r\n            },\r\n          ]\r\n        },\r\n        data: [],\r\n        debugForm: {\r\n          code: '',\r\n        },\r\n        debugOption: {\r\n          submitText: \"发送\",\r\n          column: [\r\n            {\r\n              label: \"资源编号\",\r\n              prop: \"code\",\r\n              disabled: true,\r\n              span: 24,\r\n            },\r\n            {\r\n              label: \"发送手机\",\r\n              prop: \"phones\",\r\n              span: 24,\r\n            },\r\n            {\r\n              label: \"发送参数\",\r\n              prop: \"params\",\r\n              span: 24,\r\n              placeholder: \"例: {'code':2333,'title':'通知标题'}\",\r\n            },\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    watch: {\r\n      'form.category'() {\r\n        const category = func.toInt(this.form.category);\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"templateId\") {\r\n            if (category === 1) {\r\n              item.label = \"模版内容\";\r\n            } else {\r\n              item.label = \"模版ID\";\r\n            }\r\n          }\r\n          if (item.prop === \"accessKey\") {\r\n            if (category === 1) {\r\n              item.label = \"apiKey\";\r\n            } else if (category === 4) {\r\n              item.label = \"appId\";\r\n            } else {\r\n              item.label = \"accessKey\";\r\n            }\r\n          }\r\n          if (item.prop === \"secretKey\") {\r\n            item.display = category !== 1;\r\n            if (category === 4) {\r\n              item.label = \"appKey\";\r\n            } else {\r\n              item.label = \"secretKey\";\r\n            }\r\n          }\r\n          if (item.prop === \"regionId\") {\r\n            if (category === 3) {\r\n              item.display = true;\r\n              item.value = \"cn-hangzhou\";\r\n            } else {\r\n              item.display = false;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"userInfo\", \"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.sms_add, false),\r\n          viewBtn: this.vaildData(this.permission.sms_view, false),\r\n          delBtn: this.vaildData(this.permission.sms_delete, false),\r\n          editBtn: this.vaildData(this.permission.sms_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleEnable(row) {\r\n        this.$confirm(\"是否确定启用这条配置?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return enable(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleDebug(row) {\r\n        this.box = true;\r\n        this.debugForm.code = row.smsCode;\r\n      },\r\n      handleSend(form, done, loading) {\r\n        send(form.code, form.phones, form.params).then((res) => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"发送成功!\"\r\n          });\r\n          done();\r\n          window.console.log(res);\r\n          this.box = false;\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n",{"version":3,"sources":["sms.vue"],"names":[],"mappingsfile":"sms.vue","sourceRoot":"src/views/resource","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page.sync=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.sms_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   icon=\"el-icon-video-play\"\r\n                   size=\"small\"\r\n                   v-if=\"userInfo.role_name.includes('admin')\"\r\n                   @click=\"handleDebug(scope.row)\">调试\r\n        </el-button>\r\n        <el-button type=\"text\"\r\n                   icon=\"el-icon-circle-check\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.sms_enable\"\r\n                   @click.stop=\"handleEnable(scope.row)\">启用\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"status\">\r\n        <el-tag>{{row.statusName}}</el-tag>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"category\">\r\n        <el-tag>{{row.categoryName}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <el-dialog title=\"手机短信发送调试\"\r\n               append-to-body\r\n               :visible.sync=\"box\"\r\n               width=\"550px\">\r\n      <avue-form :option=\"debugOption\" v-model=\"debugForm\" @submit=\"handleSend\"/>\r\n    </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, add, update, remove, enable, send} from \"@/api/resource/sms\";\r\n  import {mapGetters} from \"vuex\";\r\n  import func from \"@/util/func\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        box: false,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 30,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          menuWidth: 300,\r\n          labelWidth: 100,\r\n          dialogWidth: 880,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"分类\",\r\n              type: \"radio\",\r\n              value: 1,\r\n              span: 24,\r\n              width: 100,\r\n              searchLabelWidth: 50,\r\n              row: true,\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=sms\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              slot: true,\r\n              prop: \"category\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择分类\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"资源编号\",\r\n              prop: \"smsCode\",\r\n              span: 24,\r\n              width: 200,\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入资源编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"模版ID\",\r\n              prop: \"templateId\",\r\n              span: 24,\r\n              width: 200,\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入模版ID\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"accessKey\",\r\n              prop: \"accessKey\",\r\n              span: 24,\r\n              overHidden: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入accessKey\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: \"secretKey\",\r\n              prop: \"secretKey\",\r\n              span: 24,\r\n              overHidden: true,\r\n              display: true,\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入secretKey\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: \"regionId\",\r\n              prop: \"regionId\",\r\n              span: 24,\r\n              value: \"cn-hangzhou\",\r\n              hide: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"短信签名\",\r\n              prop: \"signName\",\r\n              span: 24,\r\n              width: 200,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入短信签名\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: \"是否启用\",\r\n              prop: \"status\",\r\n              span: 24,\r\n              width: 80,\r\n              align: \"center\",\r\n              slot: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"remark\",\r\n              span: 24,\r\n              hide: true\r\n            },\r\n          ]\r\n        },\r\n        data: [],\r\n        debugForm: {\r\n          code: '',\r\n        },\r\n        debugOption: {\r\n          submitText: \"发送\",\r\n          column: [\r\n            {\r\n              label: \"资源编号\",\r\n              prop: \"code\",\r\n              disabled: true,\r\n              span: 24,\r\n            },\r\n            {\r\n              label: \"发送手机\",\r\n              prop: \"phones\",\r\n              span: 24,\r\n            },\r\n            {\r\n              label: \"发送参数\",\r\n              prop: \"params\",\r\n              span: 24,\r\n              placeholder: \"例: {'code':2333,'title':'通知标题'}\",\r\n            },\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    watch: {\r\n      'form.category'() {\r\n        const category = func.toInt(this.form.category);\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"templateId\") {\r\n            if (category === 1) {\r\n              item.label = \"模版内容\";\r\n            } else {\r\n              item.label = \"模版ID\";\r\n            }\r\n          }\r\n          if (item.prop === \"accessKey\") {\r\n            if (category === 1) {\r\n              item.label = \"apiKey\";\r\n            } else if (category === 4) {\r\n              item.label = \"appId\";\r\n            } else {\r\n              item.label = \"accessKey\";\r\n            }\r\n          }\r\n          if (item.prop === \"secretKey\") {\r\n            item.display = category !== 1;\r\n            if (category === 4) {\r\n              item.label = \"appKey\";\r\n            } else {\r\n              item.label = \"secretKey\";\r\n            }\r\n          }\r\n          if (item.prop === \"regionId\") {\r\n            if (category === 3) {\r\n              item.display = true;\r\n              item.value = \"cn-hangzhou\";\r\n            } else {\r\n              item.display = false;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"userInfo\", \"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.sms_add, false),\r\n          viewBtn: this.vaildData(this.permission.sms_view, false),\r\n          delBtn: this.vaildData(this.permission.sms_delete, false),\r\n          editBtn: this.vaildData(this.permission.sms_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleEnable(row) {\r\n        this.$confirm(\"是否确定启用这条配置?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return enable(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleDebug(row) {\r\n        this.box = true;\r\n        this.debugForm.code = row.smsCode;\r\n      },\r\n      handleSend(form, done, loading) {\r\n        send(form.code, form.phones, form.params).then((res) => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"发送成功!\"\r\n          });\r\n          done();\r\n          window.console.log(res);\r\n          this.box = false;\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n"]}]}